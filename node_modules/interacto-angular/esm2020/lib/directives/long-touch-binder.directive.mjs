import { Directive, EventEmitter, Host, Input, Optional, Output } from '@angular/core';
import { InteractoBinderDirective } from './interacto-binder-directive';
import * as i0 from "@angular/core";
import * as i1 from "./on-dynamic.directive";
import * as i2 from "interacto";
export class LongTouchBinderDirective extends InteractoBinderDirective {
    constructor(onDyn, element, viewContainerRef, changeDetectorRef, bindings) {
        super(onDyn, element, viewContainerRef, changeDetectorRef);
        this.bindings = bindings;
        /**
         * The duration of the touch to end the user interaction.
         * If this duration is not reached, the interaction is cancelled.
         */
        this.duration = 1000;
        this.longTouchBinder = new EventEmitter();
    }
    /**
     * Starts the creation of a binding using the long touch interaction.
     * @param fn - The function of the component that will be called to configure the binding.
     */
    set ioLongTouch(fn) {
        this.callBinder(fn);
    }
    createPartialBinder() {
        return this.bindings.longTouchBinder(this.duration);
    }
    getOutputEvent() {
        return this.longTouchBinder;
    }
}
LongTouchBinderDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.0.4", ngImport: i0, type: LongTouchBinderDirective, deps: [{ token: i1.OnDynamicDirective, host: true, optional: true }, { token: i0.ElementRef }, { token: i0.ViewContainerRef }, { token: i0.ChangeDetectorRef }, { token: i2.Bindings }], target: i0.ɵɵFactoryTarget.Directive });
LongTouchBinderDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "14.0.4", type: LongTouchBinderDirective, selector: "[ioLongTouch]", inputs: { duration: "duration", ioLongTouch: "ioLongTouch" }, outputs: { longTouchBinder: "longTouchBinder" }, usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.0.4", ngImport: i0, type: LongTouchBinderDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[ioLongTouch]'
                }]
        }], ctorParameters: function () { return [{ type: i1.OnDynamicDirective, decorators: [{
                    type: Optional
                }, {
                    type: Host
                }] }, { type: i0.ElementRef }, { type: i0.ViewContainerRef }, { type: i0.ChangeDetectorRef }, { type: i2.Bindings }]; }, propDecorators: { longTouchBinder: [{
                type: Output
            }], duration: [{
                type: Input
            }], ioLongTouch: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9uZy10b3VjaC1iaW5kZXIuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvaW50ZXJhY3RvLWFuZ3VsYXIvc3JjL2xpYi9kaXJlY3RpdmVzL2xvbmctdG91Y2gtYmluZGVyLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQW9CLFNBQVMsRUFBYyxZQUFZLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFtQixNQUFNLGVBQWUsQ0FBQztBQUd0SSxPQUFPLEVBQUMsd0JBQXdCLEVBQUMsTUFBTSw4QkFBOEIsQ0FBQzs7OztBQUt0RSxNQUFNLE9BQU8sd0JBQXlCLFNBQVEsd0JBQXlEO0lBSXJHLFlBQWdDLEtBQXlCLEVBQzdDLE9BQWdDLEVBQ2hDLGdCQUFrQyxFQUNsQyxpQkFBb0MsRUFDNUIsUUFBbUM7UUFDckQsS0FBSyxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsaUJBQWlCLENBQUMsQ0FBQztRQUR6QyxhQUFRLEdBQVIsUUFBUSxDQUEyQjtRQUt2RDs7O1dBR0c7UUFFSCxhQUFRLEdBQUcsSUFBSSxDQUFDO1FBUmQsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLFlBQVksRUFBc0IsQ0FBQztJQUNoRSxDQUFDO0lBU0Q7OztPQUdHO0lBQ0gsSUFDSSxXQUFXLENBQUMsRUFBb0o7UUFDbEssSUFBSSxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUN0QixDQUFDO0lBRVMsbUJBQW1CO1FBQzNCLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3RELENBQUM7SUFFUyxjQUFjO1FBQ3RCLE9BQU8sSUFBSSxDQUFDLGVBQWUsQ0FBQztJQUM5QixDQUFDOztxSEFuQ1Usd0JBQXdCO3lHQUF4Qix3QkFBd0I7MkZBQXhCLHdCQUF3QjtrQkFIcEMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsZUFBZTtpQkFDMUI7OzBCQUtjLFFBQVE7OzBCQUFJLElBQUk7MkpBRlosZUFBZTtzQkFEL0IsTUFBTTtnQkFpQlAsUUFBUTtzQkFEUCxLQUFLO2dCQVFGLFdBQVc7c0JBRGQsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2hhbmdlRGV0ZWN0b3JSZWYsIERpcmVjdGl2ZSwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBIb3N0LCBJbnB1dCwgT3B0aW9uYWwsIE91dHB1dCwgVmlld0NvbnRhaW5lclJlZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0JpbmRpbmcsIEJpbmRpbmdzLCBQYXJ0aWFsVG91Y2hCaW5kZXIsIFVuZG9IaXN0b3J5QmFzZX0gZnJvbSAnaW50ZXJhY3RvJztcbmltcG9ydCB7T25EeW5hbWljRGlyZWN0aXZlfSBmcm9tICcuL29uLWR5bmFtaWMuZGlyZWN0aXZlJztcbmltcG9ydCB7SW50ZXJhY3RvQmluZGVyRGlyZWN0aXZlfSBmcm9tICcuL2ludGVyYWN0by1iaW5kZXItZGlyZWN0aXZlJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW2lvTG9uZ1RvdWNoXSdcbn0pXG5leHBvcnQgY2xhc3MgTG9uZ1RvdWNoQmluZGVyRGlyZWN0aXZlIGV4dGVuZHMgSW50ZXJhY3RvQmluZGVyRGlyZWN0aXZlPEhUTUxFbGVtZW50LCBQYXJ0aWFsVG91Y2hCaW5kZXI+IHtcbiAgQE91dHB1dCgpXG4gIHByaXZhdGUgcmVhZG9ubHkgbG9uZ1RvdWNoQmluZGVyOiBFdmVudEVtaXR0ZXI8UGFydGlhbFRvdWNoQmluZGVyPjtcblxuICBjb25zdHJ1Y3RvcihAT3B0aW9uYWwoKSBASG9zdCgpIG9uRHluOiBPbkR5bmFtaWNEaXJlY3RpdmUsXG4gICAgICAgICAgICAgIGVsZW1lbnQ6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+LFxuICAgICAgICAgICAgICB2aWV3Q29udGFpbmVyUmVmOiBWaWV3Q29udGFpbmVyUmVmLFxuICAgICAgICAgICAgICBjaGFuZ2VEZXRlY3RvclJlZjogQ2hhbmdlRGV0ZWN0b3JSZWYsXG4gICAgICAgICAgICAgIHByaXZhdGUgYmluZGluZ3M6IEJpbmRpbmdzPFVuZG9IaXN0b3J5QmFzZT4pIHtcbiAgICBzdXBlcihvbkR5biwgZWxlbWVudCwgdmlld0NvbnRhaW5lclJlZiwgY2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIHRoaXMubG9uZ1RvdWNoQmluZGVyID0gbmV3IEV2ZW50RW1pdHRlcjxQYXJ0aWFsVG91Y2hCaW5kZXI+KCk7XG4gIH1cblxuICAvKipcbiAgICogVGhlIGR1cmF0aW9uIG9mIHRoZSB0b3VjaCB0byBlbmQgdGhlIHVzZXIgaW50ZXJhY3Rpb24uXG4gICAqIElmIHRoaXMgZHVyYXRpb24gaXMgbm90IHJlYWNoZWQsIHRoZSBpbnRlcmFjdGlvbiBpcyBjYW5jZWxsZWQuXG4gICAqL1xuICBASW5wdXQoKVxuICBkdXJhdGlvbiA9IDEwMDA7XG5cbiAgLyoqXG4gICAqIFN0YXJ0cyB0aGUgY3JlYXRpb24gb2YgYSBiaW5kaW5nIHVzaW5nIHRoZSBsb25nIHRvdWNoIGludGVyYWN0aW9uLlxuICAgKiBAcGFyYW0gZm4gLSBUaGUgZnVuY3Rpb24gb2YgdGhlIGNvbXBvbmVudCB0aGF0IHdpbGwgYmUgY2FsbGVkIHRvIGNvbmZpZ3VyZSB0aGUgYmluZGluZy5cbiAgICovXG4gIEBJbnB1dCgpXG4gIHNldCBpb0xvbmdUb3VjaChmbjogKChwYXJ0aWFsQmluZGVyOiBQYXJ0aWFsVG91Y2hCaW5kZXIsIHdpZGdldDogSFRNTEVsZW1lbnQpID0+IEJpbmRpbmc8YW55LCBhbnksIGFueT4gfCBBcnJheTxCaW5kaW5nPGFueSwgYW55LCBhbnk+PiB8IHZvaWQpIHwgdW5kZWZpbmVkIHwgc3RyaW5nKSAge1xuICAgIHRoaXMuY2FsbEJpbmRlcihmbik7XG4gIH1cblxuICBwcm90ZWN0ZWQgY3JlYXRlUGFydGlhbEJpbmRlcigpOiBQYXJ0aWFsVG91Y2hCaW5kZXIge1xuICAgIHJldHVybiB0aGlzLmJpbmRpbmdzLmxvbmdUb3VjaEJpbmRlcih0aGlzLmR1cmF0aW9uKTtcbiAgfVxuXG4gIHByb3RlY3RlZCBnZXRPdXRwdXRFdmVudCgpOiBFdmVudEVtaXR0ZXI8UGFydGlhbFRvdWNoQmluZGVyPiB7XG4gICAgcmV0dXJuIHRoaXMubG9uZ1RvdWNoQmluZGVyO1xuICB9XG59XG4iXX0=