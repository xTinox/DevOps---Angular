import { Directive, EventEmitter, Host, Input, Optional, Output } from '@angular/core';
import { InteractoBinderDirective } from './interacto-binder-directive';
import * as i0 from "@angular/core";
import * as i1 from "./on-dynamic.directive";
import * as i2 from "interacto";
export class KeydownBinderDirective extends InteractoBinderDirective {
    constructor(onDyn, element, viewContainerRef, changeDetectorRef, bindings) {
        super(onDyn, element, viewContainerRef, changeDetectorRef);
        this.bindings = bindings;
        this.modifierAccepted = true;
        this.keydownBinder = new EventEmitter();
    }
    /**
     * Starts the creation of a binding using the key pressure interaction.
     * @param fn - The function of the component that will be called to configure the binding.
     */
    set ioKeydown(fn) {
        this.callBinder(fn);
    }
    createPartialBinder() {
        return this.bindings.keyDownBinder(this.modifierAccepted);
    }
    getOutputEvent() {
        return this.keydownBinder;
    }
}
KeydownBinderDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.0.4", ngImport: i0, type: KeydownBinderDirective, deps: [{ token: i1.OnDynamicDirective, host: true, optional: true }, { token: i0.ElementRef }, { token: i0.ViewContainerRef }, { token: i0.ChangeDetectorRef }, { token: i2.Bindings }], target: i0.ɵɵFactoryTarget.Directive });
KeydownBinderDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "14.0.4", type: KeydownBinderDirective, selector: "[ioKeydown]", inputs: { modifierAccepted: "modifierAccepted", ioKeydown: "ioKeydown" }, outputs: { keydownBinder: "keydownBinder" }, usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.0.4", ngImport: i0, type: KeydownBinderDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[ioKeydown]'
                }]
        }], ctorParameters: function () { return [{ type: i1.OnDynamicDirective, decorators: [{
                    type: Optional
                }, {
                    type: Host
                }] }, { type: i0.ElementRef }, { type: i0.ViewContainerRef }, { type: i0.ChangeDetectorRef }, { type: i2.Bindings }]; }, propDecorators: { keydownBinder: [{
                type: Output
            }], modifierAccepted: [{
                type: Input
            }], ioKeydown: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia2V5ZG93bi1iaW5kZXIuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvaW50ZXJhY3RvLWFuZ3VsYXIvc3JjL2xpYi9kaXJlY3RpdmVzL2tleWRvd24tYmluZGVyLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQW9CLFNBQVMsRUFBYyxZQUFZLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFtQixNQUFNLGVBQWUsQ0FBQztBQUd0SSxPQUFPLEVBQUMsd0JBQXdCLEVBQUMsTUFBTSw4QkFBOEIsQ0FBQzs7OztBQUt0RSxNQUFNLE9BQU8sc0JBQXVCLFNBQVEsd0JBQXVEO0lBSWpHLFlBQWdDLEtBQXlCLEVBQzdDLE9BQWdDLEVBQ2hDLGdCQUFrQyxFQUNsQyxpQkFBb0MsRUFDNUIsUUFBbUM7UUFDckQsS0FBSyxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsaUJBQWlCLENBQUMsQ0FBQztRQUR6QyxhQUFRLEdBQVIsUUFBUSxDQUEyQjtRQU12RCxxQkFBZ0IsR0FBRyxJQUFJLENBQUM7UUFKdEIsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLFlBQVksRUFBb0IsQ0FBQztJQUM1RCxDQUFDO0lBS0Q7OztPQUdHO0lBQ0gsSUFDSSxTQUFTLENBQUMsRUFBa0o7UUFDOUosSUFBSSxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUN0QixDQUFDO0lBRVMsbUJBQW1CO1FBQzNCLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUM7SUFDNUQsQ0FBQztJQUVTLGNBQWM7UUFDdEIsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDO0lBQzVCLENBQUM7O21IQS9CVSxzQkFBc0I7dUdBQXRCLHNCQUFzQjsyRkFBdEIsc0JBQXNCO2tCQUhsQyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxhQUFhO2lCQUN4Qjs7MEJBS2MsUUFBUTs7MEJBQUksSUFBSTsySkFGWixhQUFhO3NCQUQ3QixNQUFNO2dCQWFQLGdCQUFnQjtzQkFEZixLQUFLO2dCQVFGLFNBQVM7c0JBRFosS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2hhbmdlRGV0ZWN0b3JSZWYsIERpcmVjdGl2ZSwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBIb3N0LCBJbnB1dCwgT3B0aW9uYWwsIE91dHB1dCwgVmlld0NvbnRhaW5lclJlZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0JpbmRpbmcsIEJpbmRpbmdzLCBQYXJ0aWFsS2V5QmluZGVyLCBVbmRvSGlzdG9yeUJhc2V9IGZyb20gJ2ludGVyYWN0byc7XG5pbXBvcnQge09uRHluYW1pY0RpcmVjdGl2ZX0gZnJvbSAnLi9vbi1keW5hbWljLmRpcmVjdGl2ZSc7XG5pbXBvcnQge0ludGVyYWN0b0JpbmRlckRpcmVjdGl2ZX0gZnJvbSAnLi9pbnRlcmFjdG8tYmluZGVyLWRpcmVjdGl2ZSc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tpb0tleWRvd25dJ1xufSlcbmV4cG9ydCBjbGFzcyBLZXlkb3duQmluZGVyRGlyZWN0aXZlIGV4dGVuZHMgSW50ZXJhY3RvQmluZGVyRGlyZWN0aXZlPEhUTUxFbGVtZW50LCBQYXJ0aWFsS2V5QmluZGVyPiB7XG4gIEBPdXRwdXQoKVxuICBwcml2YXRlIHJlYWRvbmx5IGtleWRvd25CaW5kZXI6IEV2ZW50RW1pdHRlcjxQYXJ0aWFsS2V5QmluZGVyPjtcblxuICBjb25zdHJ1Y3RvcihAT3B0aW9uYWwoKSBASG9zdCgpIG9uRHluOiBPbkR5bmFtaWNEaXJlY3RpdmUsXG4gICAgICAgICAgICAgIGVsZW1lbnQ6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+LFxuICAgICAgICAgICAgICB2aWV3Q29udGFpbmVyUmVmOiBWaWV3Q29udGFpbmVyUmVmLFxuICAgICAgICAgICAgICBjaGFuZ2VEZXRlY3RvclJlZjogQ2hhbmdlRGV0ZWN0b3JSZWYsXG4gICAgICAgICAgICAgIHByaXZhdGUgYmluZGluZ3M6IEJpbmRpbmdzPFVuZG9IaXN0b3J5QmFzZT4pIHtcbiAgICBzdXBlcihvbkR5biwgZWxlbWVudCwgdmlld0NvbnRhaW5lclJlZiwgY2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIHRoaXMua2V5ZG93bkJpbmRlciA9IG5ldyBFdmVudEVtaXR0ZXI8UGFydGlhbEtleUJpbmRlcj4oKTtcbiAgfVxuXG4gIEBJbnB1dCgpXG4gIG1vZGlmaWVyQWNjZXB0ZWQgPSB0cnVlO1xuXG4gIC8qKlxuICAgKiBTdGFydHMgdGhlIGNyZWF0aW9uIG9mIGEgYmluZGluZyB1c2luZyB0aGUga2V5IHByZXNzdXJlIGludGVyYWN0aW9uLlxuICAgKiBAcGFyYW0gZm4gLSBUaGUgZnVuY3Rpb24gb2YgdGhlIGNvbXBvbmVudCB0aGF0IHdpbGwgYmUgY2FsbGVkIHRvIGNvbmZpZ3VyZSB0aGUgYmluZGluZy5cbiAgICovXG4gIEBJbnB1dCgpXG4gIHNldCBpb0tleWRvd24oZm46ICgocGFydGlhbEJpbmRlcjogUGFydGlhbEtleUJpbmRlciwgd2lkZ2V0OiBIVE1MRWxlbWVudCkgPT4gQmluZGluZzxhbnksIGFueSwgYW55PiB8IEFycmF5PEJpbmRpbmc8YW55LCBhbnksIGFueT4+IHwgdm9pZCkgfCB1bmRlZmluZWQgfCBzdHJpbmcpICB7XG4gICAgdGhpcy5jYWxsQmluZGVyKGZuKTtcbiAgfVxuXG4gIHByb3RlY3RlZCBjcmVhdGVQYXJ0aWFsQmluZGVyKCk6IFBhcnRpYWxLZXlCaW5kZXIge1xuICAgIHJldHVybiB0aGlzLmJpbmRpbmdzLmtleURvd25CaW5kZXIodGhpcy5tb2RpZmllckFjY2VwdGVkKTtcbiAgfVxuXG4gIHByb3RlY3RlZCBnZXRPdXRwdXRFdmVudCgpOiBFdmVudEVtaXR0ZXI8UGFydGlhbEtleUJpbmRlcj4ge1xuICAgIHJldHVybiB0aGlzLmtleWRvd25CaW5kZXI7XG4gIH1cbn1cbiJdfQ==