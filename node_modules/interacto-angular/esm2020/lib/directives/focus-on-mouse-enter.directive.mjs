import { Directive } from '@angular/core';
import { FocusHTMLElement } from 'interacto';
import * as i0 from "@angular/core";
import * as i1 from "interacto";
export class FocusOnMouseEnterDirective {
    constructor(element, bindings) {
        this.element = element;
        this.bindings = bindings;
    }
    ngAfterContentInit() {
        this.binding = this.bindings
            .mouseEnterBinder(true)
            .on(this.element)
            .toProduce(i => new FocusHTMLElement(i.currentTarget))
            .bind();
    }
    ngOnDestroy() {
        if (this.binding !== undefined) {
            this.binding.uninstallBinding();
        }
    }
}
FocusOnMouseEnterDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.0.4", ngImport: i0, type: FocusOnMouseEnterDirective, deps: [{ token: i0.ElementRef }, { token: i1.Bindings }], target: i0.ɵɵFactoryTarget.Directive });
FocusOnMouseEnterDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "14.0.4", type: FocusOnMouseEnterDirective, selector: "[ioFocusOnMouseEnter]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.0.4", ngImport: i0, type: FocusOnMouseEnterDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[ioFocusOnMouseEnter]'
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Bindings }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9jdXMtb24tbW91c2UtZW50ZXIuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvaW50ZXJhY3RvLWFuZ3VsYXIvc3JjL2xpYi9kaXJlY3RpdmVzL2ZvY3VzLW9uLW1vdXNlLWVudGVyLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQW1CLFNBQVMsRUFBd0IsTUFBTSxlQUFlLENBQUM7QUFDakYsT0FBTyxFQUFvQixnQkFBZ0IsRUFBMEMsTUFBTSxXQUFXLENBQUM7OztBQUt2RyxNQUFNLE9BQU8sMEJBQTBCO0lBR3JDLFlBQW9CLE9BQWdDLEVBQ2hDLFFBQW1DO1FBRG5DLFlBQU8sR0FBUCxPQUFPLENBQXlCO1FBQ2hDLGFBQVEsR0FBUixRQUFRLENBQTJCO0lBQ3ZELENBQUM7SUFFTSxrQkFBa0I7UUFDdkIsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsUUFBUTthQUN6QixnQkFBZ0IsQ0FBQyxJQUFJLENBQUM7YUFDdEIsRUFBRSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUM7YUFDaEIsU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDLENBQUM7YUFDckQsSUFBSSxFQUFFLENBQUM7SUFDWixDQUFDO0lBRU0sV0FBVztRQUNoQixJQUFHLElBQUksQ0FBQyxPQUFPLEtBQUssU0FBUyxFQUFFO1lBQzdCLElBQUksQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztTQUNqQztJQUNILENBQUM7O3VIQW5CVSwwQkFBMEI7MkdBQTFCLDBCQUEwQjsyRkFBMUIsMEJBQTBCO2tCQUh0QyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSx1QkFBdUI7aUJBQ2xDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBZnRlckNvbnRlbnRJbml0LCBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIE9uRGVzdHJveX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0JpbmRpbmcsIEJpbmRpbmdzLCBGb2N1c0hUTUxFbGVtZW50LCBJbnRlcmFjdGlvbiwgUG9pbnREYXRhLCBVbmRvSGlzdG9yeUJhc2V9IGZyb20gJ2ludGVyYWN0byc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tpb0ZvY3VzT25Nb3VzZUVudGVyXSdcbn0pXG5leHBvcnQgY2xhc3MgRm9jdXNPbk1vdXNlRW50ZXJEaXJlY3RpdmUgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0LCBPbkRlc3Ryb3kge1xuICBwcml2YXRlIGJpbmRpbmc6IEJpbmRpbmc8Rm9jdXNIVE1MRWxlbWVudCwgSW50ZXJhY3Rpb248UG9pbnREYXRhPiwgUG9pbnREYXRhPiB8IHVuZGVmaW5lZDtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsZW1lbnQ6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+LFxuICAgICAgICAgICAgICBwcml2YXRlIGJpbmRpbmdzOiBCaW5kaW5nczxVbmRvSGlzdG9yeUJhc2U+KSB7XG4gIH1cblxuICBwdWJsaWMgbmdBZnRlckNvbnRlbnRJbml0KCk6IHZvaWQge1xuICAgIHRoaXMuYmluZGluZyA9IHRoaXMuYmluZGluZ3NcbiAgICAgIC5tb3VzZUVudGVyQmluZGVyKHRydWUpXG4gICAgICAub24odGhpcy5lbGVtZW50KVxuICAgICAgLnRvUHJvZHVjZShpID0+IG5ldyBGb2N1c0hUTUxFbGVtZW50KGkuY3VycmVudFRhcmdldCkpXG4gICAgICAuYmluZCgpO1xuICB9XG5cbiAgcHVibGljIG5nT25EZXN0cm95KCk6IHZvaWQge1xuICAgIGlmKHRoaXMuYmluZGluZyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aGlzLmJpbmRpbmcudW5pbnN0YWxsQmluZGluZygpO1xuICAgIH1cbiAgfVxufVxuIl19