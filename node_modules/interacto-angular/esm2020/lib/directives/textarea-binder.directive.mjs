import { Directive, EventEmitter, Host, Input, Optional, Output } from '@angular/core';
import { InteractoBinderDirective } from './interacto-binder-directive';
import * as i0 from "@angular/core";
import * as i1 from "./on-dynamic.directive";
import * as i2 from "interacto";
export class TextAreaBinderDirective extends InteractoBinderDirective {
    constructor(onDyn, element, viewContainerRef, bindings) {
        super(onDyn, element, viewContainerRef);
        this.bindings = bindings;
        this.textareaBinder = new EventEmitter();
    }
    set ioTextarea(fn) {
        this.callBinder(fn);
    }
    createPartialBinder() {
        return this.bindings.textInputBinder();
    }
    getOutputEvent() {
        return this.textareaBinder;
    }
}
TextAreaBinderDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.0.4", ngImport: i0, type: TextAreaBinderDirective, deps: [{ token: i1.OnDynamicDirective, host: true, optional: true }, { token: i0.ElementRef }, { token: i0.ViewContainerRef }, { token: i2.Bindings }], target: i0.ɵɵFactoryTarget.Directive });
TextAreaBinderDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "14.0.4", type: TextAreaBinderDirective, selector: "textarea:[ioTextarea], [ioTextarea] [ioOnDynamic]", inputs: { ioTextarea: "ioTextarea" }, outputs: { textareaBinder: "textareaBinder" }, usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.0.4", ngImport: i0, type: TextAreaBinderDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'textarea:[ioTextarea], [ioTextarea] [ioOnDynamic]'
                }]
        }], ctorParameters: function () { return [{ type: i1.OnDynamicDirective, decorators: [{
                    type: Optional
                }, {
                    type: Host
                }] }, { type: i0.ElementRef }, { type: i0.ViewContainerRef }, { type: i2.Bindings }]; }, propDecorators: { textareaBinder: [{
                type: Output
            }], ioTextarea: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dGFyZWEtYmluZGVyLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ludGVyYWN0by1hbmd1bGFyL3NyYy9saWIvZGlyZWN0aXZlcy90ZXh0YXJlYS1iaW5kZXIuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQWMsWUFBWSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBbUIsTUFBTSxlQUFlLENBQUM7QUFFbkgsT0FBTyxFQUFDLHdCQUF3QixFQUFDLE1BQU0sOEJBQThCLENBQUM7Ozs7QUFPdEUsTUFBTSxPQUFPLHVCQUF3QixTQUFRLHdCQUFxRTtJQUloSCxZQUFnQyxLQUF5QixFQUM3QyxPQUF3QyxFQUN4QyxnQkFBa0MsRUFDMUIsUUFBbUM7UUFDckQsS0FBSyxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztRQUR0QixhQUFRLEdBQVIsUUFBUSxDQUEyQjtRQUVyRCxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksWUFBWSxFQUEwQixDQUFDO0lBQ25FLENBQUM7SUFFRCxJQUNJLFVBQVUsQ0FBQyxFQUFnSztRQUM3SyxJQUFJLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ3RCLENBQUM7SUFFUyxtQkFBbUI7UUFDM0IsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQ3pDLENBQUM7SUFFUyxjQUFjO1FBQ3RCLE9BQU8sSUFBSSxDQUFDLGNBQWMsQ0FBQztJQUM3QixDQUFDOztvSEF2QlUsdUJBQXVCO3dHQUF2Qix1QkFBdUI7MkZBQXZCLHVCQUF1QjtrQkFIbkMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsbURBQW1EO2lCQUM5RDs7MEJBS2MsUUFBUTs7MEJBQUksSUFBSTsySEFGWixjQUFjO3NCQUQ5QixNQUFNO2dCQVlILFVBQVU7c0JBRGIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RGlyZWN0aXZlLCBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIEhvc3QsIElucHV0LCBPcHRpb25hbCwgT3V0cHV0LCBWaWV3Q29udGFpbmVyUmVmfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7QmluZGluZywgQmluZGluZ3MsIFVuZG9IaXN0b3J5QmFzZX0gZnJvbSAnaW50ZXJhY3RvJztcbmltcG9ydCB7SW50ZXJhY3RvQmluZGVyRGlyZWN0aXZlfSBmcm9tICcuL2ludGVyYWN0by1iaW5kZXItZGlyZWN0aXZlJztcbmltcG9ydCB7T25EeW5hbWljRGlyZWN0aXZlfSBmcm9tICcuL29uLWR5bmFtaWMuZGlyZWN0aXZlJztcbmltcG9ydCB7UGFydGlhbFRleHRJbnB1dEJpbmRlcn0gZnJvbSAnaW50ZXJhY3RvL2Rpc3QvYXBpL2JpbmRpbmcvQmluZGluZ3MnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICd0ZXh0YXJlYTpbaW9UZXh0YXJlYV0sIFtpb1RleHRhcmVhXSBbaW9PbkR5bmFtaWNdJ1xufSlcbmV4cG9ydCBjbGFzcyBUZXh0QXJlYUJpbmRlckRpcmVjdGl2ZSBleHRlbmRzIEludGVyYWN0b0JpbmRlckRpcmVjdGl2ZTxIVE1MVGV4dEFyZWFFbGVtZW50LCBQYXJ0aWFsVGV4dElucHV0QmluZGVyPiB7XG4gIEBPdXRwdXQoKVxuICBwcml2YXRlIHJlYWRvbmx5IHRleHRhcmVhQmluZGVyOiBFdmVudEVtaXR0ZXI8UGFydGlhbFRleHRJbnB1dEJpbmRlcj47XG5cbiAgY29uc3RydWN0b3IoQE9wdGlvbmFsKCkgQEhvc3QoKSBvbkR5bjogT25EeW5hbWljRGlyZWN0aXZlLFxuICAgICAgICAgICAgICBlbGVtZW50OiBFbGVtZW50UmVmPEhUTUxUZXh0QXJlYUVsZW1lbnQ+LFxuICAgICAgICAgICAgICB2aWV3Q29udGFpbmVyUmVmOiBWaWV3Q29udGFpbmVyUmVmLFxuICAgICAgICAgICAgICBwcml2YXRlIGJpbmRpbmdzOiBCaW5kaW5nczxVbmRvSGlzdG9yeUJhc2U+KSB7XG4gICAgc3VwZXIob25EeW4sIGVsZW1lbnQsIHZpZXdDb250YWluZXJSZWYpO1xuICAgIHRoaXMudGV4dGFyZWFCaW5kZXIgPSBuZXcgRXZlbnRFbWl0dGVyPFBhcnRpYWxUZXh0SW5wdXRCaW5kZXI+KCk7XG4gIH1cblxuICBASW5wdXQoKVxuICBzZXQgaW9UZXh0YXJlYShmbjogKChwYXJ0aWFsQmluZGVyOiBQYXJ0aWFsVGV4dElucHV0QmluZGVyLCB3aWRnZXQ6IEhUTUxUZXh0QXJlYUVsZW1lbnQpID0+IEJpbmRpbmc8YW55LCBhbnksIGFueT4gfCBBcnJheTxCaW5kaW5nPGFueSwgYW55LCBhbnk+PiB8IHZvaWQpIHwgdW5kZWZpbmVkIHwgc3RyaW5nKSB7XG4gICAgdGhpcy5jYWxsQmluZGVyKGZuKTtcbiAgfVxuXG4gIHByb3RlY3RlZCBjcmVhdGVQYXJ0aWFsQmluZGVyKCk6IFBhcnRpYWxUZXh0SW5wdXRCaW5kZXIge1xuICAgIHJldHVybiB0aGlzLmJpbmRpbmdzLnRleHRJbnB1dEJpbmRlcigpO1xuICB9XG5cbiAgcHJvdGVjdGVkIGdldE91dHB1dEV2ZW50KCk6IEV2ZW50RW1pdHRlcjxQYXJ0aWFsVGV4dElucHV0QmluZGVyPiB7XG4gICAgcmV0dXJuIHRoaXMudGV4dGFyZWFCaW5kZXI7XG4gIH1cbn1cbiJdfQ==