import { undoHistoryFactory } from './interacto-angular.module';
import { Bindings, BindingsContext, UndoHistory, UndoHistoryImpl } from 'interacto';
import { NgModule } from '@angular/core';
import { AngularBindings } from './base/angular-bindings';
import * as i0 from "@angular/core";
export function bindingsContextFactory() {
    return new BindingsContext();
}
export function testingBindingsFactory(ctx) {
    const binding = new AngularBindings(new UndoHistoryImpl());
    binding.setBindingObserver(ctx);
    return binding;
}
export class TestingInteractoModule {
}
TestingInteractoModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.0.4", ngImport: i0, type: TestingInteractoModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TestingInteractoModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.0.4", ngImport: i0, type: TestingInteractoModule });
TestingInteractoModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.0.4", ngImport: i0, type: TestingInteractoModule, providers: [{
            provide: BindingsContext,
            useFactory: bindingsContextFactory
        }, {
            provide: AngularBindings,
            useFactory: testingBindingsFactory,
            deps: [
                BindingsContext
            ]
        }, {
            provide: Bindings,
            useExisting: AngularBindings,
        }, {
            provide: UndoHistory,
            useFactory: undoHistoryFactory,
            deps: [
                AngularBindings
            ]
        }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.0.4", ngImport: i0, type: TestingInteractoModule, decorators: [{
            type: NgModule,
            args: [{
                    providers: [{
                            provide: BindingsContext,
                            useFactory: bindingsContextFactory
                        }, {
                            provide: AngularBindings,
                            useFactory: testingBindingsFactory,
                            deps: [
                                BindingsContext
                            ]
                        }, {
                            provide: Bindings,
                            useExisting: AngularBindings,
                        }, {
                            provide: UndoHistory,
                            useFactory: undoHistoryFactory,
                            deps: [
                                AngularBindings
                            ]
                        }],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVzdGluZy1pbnRlcmFjdG8tYW5ndWxhci5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9pbnRlcmFjdG8tYW5ndWxhci9zcmMvbGliL3Rlc3RpbmctaW50ZXJhY3RvLWFuZ3VsYXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxrQkFBa0IsRUFBQyxNQUFNLDRCQUE0QixDQUFDO0FBQzlELE9BQU8sRUFBQyxRQUFRLEVBQUUsZUFBZSxFQUFFLFdBQVcsRUFBRSxlQUFlLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFDbEYsT0FBTyxFQUFDLFFBQVEsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN2QyxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0seUJBQXlCLENBQUM7O0FBRXhELE1BQU0sVUFBVSxzQkFBc0I7SUFDcEMsT0FBTyxJQUFJLGVBQWUsRUFBRSxDQUFDO0FBQy9CLENBQUM7QUFFRCxNQUFNLFVBQVUsc0JBQXNCLENBQUMsR0FBb0I7SUFDekQsTUFBTSxPQUFPLEdBQUcsSUFBSSxlQUFlLENBQUMsSUFBSSxlQUFlLEVBQUUsQ0FBQyxDQUFDO0lBQzNELE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNoQyxPQUFPLE9BQU8sQ0FBQztBQUNqQixDQUFDO0FBdUJELE1BQU0sT0FBTyxzQkFBc0I7O21IQUF0QixzQkFBc0I7b0hBQXRCLHNCQUFzQjtvSEFBdEIsc0JBQXNCLGFBcEJ0QixDQUFDO1lBQ1YsT0FBTyxFQUFFLGVBQWU7WUFDeEIsVUFBVSxFQUFFLHNCQUFzQjtTQUNuQyxFQUFFO1lBQ0QsT0FBTyxFQUFFLGVBQWU7WUFDeEIsVUFBVSxFQUFFLHNCQUFzQjtZQUNsQyxJQUFJLEVBQUU7Z0JBQ0osZUFBZTthQUNoQjtTQUNGLEVBQUU7WUFDRCxPQUFPLEVBQUUsUUFBUTtZQUNqQixXQUFXLEVBQUUsZUFBZTtTQUM3QixFQUFFO1lBQ0QsT0FBTyxFQUFFLFdBQVc7WUFDcEIsVUFBVSxFQUFFLGtCQUFrQjtZQUM5QixJQUFJLEVBQUU7Z0JBQ0osZUFBZTthQUNoQjtTQUNGLENBQUM7MkZBRVMsc0JBQXNCO2tCQXJCbEMsUUFBUTttQkFBQztvQkFDUixTQUFTLEVBQUUsQ0FBQzs0QkFDVixPQUFPLEVBQUUsZUFBZTs0QkFDeEIsVUFBVSxFQUFFLHNCQUFzQjt5QkFDbkMsRUFBRTs0QkFDRCxPQUFPLEVBQUUsZUFBZTs0QkFDeEIsVUFBVSxFQUFFLHNCQUFzQjs0QkFDbEMsSUFBSSxFQUFFO2dDQUNKLGVBQWU7NkJBQ2hCO3lCQUNGLEVBQUU7NEJBQ0QsT0FBTyxFQUFFLFFBQVE7NEJBQ2pCLFdBQVcsRUFBRSxlQUFlO3lCQUM3QixFQUFFOzRCQUNELE9BQU8sRUFBRSxXQUFXOzRCQUNwQixVQUFVLEVBQUUsa0JBQWtCOzRCQUM5QixJQUFJLEVBQUU7Z0NBQ0osZUFBZTs2QkFDaEI7eUJBQ0YsQ0FBQztpQkFDSCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7dW5kb0hpc3RvcnlGYWN0b3J5fSBmcm9tICcuL2ludGVyYWN0by1hbmd1bGFyLm1vZHVsZSc7XG5pbXBvcnQge0JpbmRpbmdzLCBCaW5kaW5nc0NvbnRleHQsIFVuZG9IaXN0b3J5LCBVbmRvSGlzdG9yeUltcGx9IGZyb20gJ2ludGVyYWN0byc7XG5pbXBvcnQge05nTW9kdWxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7QW5ndWxhckJpbmRpbmdzfSBmcm9tICcuL2Jhc2UvYW5ndWxhci1iaW5kaW5ncyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBiaW5kaW5nc0NvbnRleHRGYWN0b3J5KCk6IEJpbmRpbmdzQ29udGV4dCB7XG4gIHJldHVybiBuZXcgQmluZGluZ3NDb250ZXh0KCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0ZXN0aW5nQmluZGluZ3NGYWN0b3J5KGN0eDogQmluZGluZ3NDb250ZXh0KTogQW5ndWxhckJpbmRpbmdzPFVuZG9IaXN0b3J5PiB7XG4gIGNvbnN0IGJpbmRpbmcgPSBuZXcgQW5ndWxhckJpbmRpbmdzKG5ldyBVbmRvSGlzdG9yeUltcGwoKSk7XG4gIGJpbmRpbmcuc2V0QmluZGluZ09ic2VydmVyKGN0eCk7XG4gIHJldHVybiBiaW5kaW5nO1xufVxuXG5ATmdNb2R1bGUoe1xuICBwcm92aWRlcnM6IFt7XG4gICAgcHJvdmlkZTogQmluZGluZ3NDb250ZXh0LFxuICAgIHVzZUZhY3Rvcnk6IGJpbmRpbmdzQ29udGV4dEZhY3RvcnlcbiAgfSwge1xuICAgIHByb3ZpZGU6IEFuZ3VsYXJCaW5kaW5ncyxcbiAgICB1c2VGYWN0b3J5OiB0ZXN0aW5nQmluZGluZ3NGYWN0b3J5LFxuICAgIGRlcHM6IFtcbiAgICAgIEJpbmRpbmdzQ29udGV4dFxuICAgIF1cbiAgfSwge1xuICAgIHByb3ZpZGU6IEJpbmRpbmdzLFxuICAgIHVzZUV4aXN0aW5nOiBBbmd1bGFyQmluZGluZ3MsXG4gIH0sIHtcbiAgICBwcm92aWRlOiBVbmRvSGlzdG9yeSxcbiAgICB1c2VGYWN0b3J5OiB1bmRvSGlzdG9yeUZhY3RvcnksXG4gICAgZGVwczogW1xuICAgICAgQW5ndWxhckJpbmRpbmdzXG4gICAgXVxuICB9XSxcbn0pXG5leHBvcnQgY2xhc3MgVGVzdGluZ0ludGVyYWN0b01vZHVsZSB7XG59XG4iXX0=