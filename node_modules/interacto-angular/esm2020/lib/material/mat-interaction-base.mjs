import { InteractionBase } from 'interacto';
import { MatSelect } from '@angular/material/select';
import { MatButtonToggle } from '@angular/material/button-toggle';
import { MatEvent } from './mat-event';
export class MatInteractionBase extends InteractionBase {
    constructor(logger, fsm, data) {
        super(fsm, data, logger);
    }
    registerEventToMatObject(node) {
        if (node instanceof MatSelect) {
            if (this.currentSubscription === undefined) {
                this.currentSubscription = node.selectionChange.subscribe(value => {
                    this.processEvent(new MatEvent(value));
                });
            }
        }
    }
    unregisterEventToMatObject() {
        this.currentSubscription?.unsubscribe();
    }
    onNewNodeRegistered(node) {
        this.getEventTypesOf(this._fsm.currentState).forEach(type => {
            if (node instanceof MatSelect || node instanceof MatButtonToggle) {
                this.registerEventToMatObject(node);
            }
            if (node instanceof EventTarget) {
                this.registerEventToNode(type, node);
                return;
            }
        });
    }
    onNodeUnregistered(node) {
        this.getEventTypesOf(this._fsm.currentState).forEach(type => {
            if (node instanceof EventTarget) {
                this.unregisterEventToNode(type, node);
                return;
            }
            else {
                this.unregisterEventToMatObject();
            }
        });
    }
    reinit() {
        this.unregisterEventToMatObject();
        super.reinit();
    }
    ;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0LWludGVyYWN0aW9uLWJhc2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9pbnRlcmFjdG8tYW5ndWxhci9zcmMvbGliL21hdGVyaWFsL21hdC1pbnRlcmFjdGlvbi1iYXNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBTSxlQUFlLEVBQVMsTUFBTSxXQUFXLENBQUM7QUFFdkQsT0FBTyxFQUFDLFNBQVMsRUFBQyxNQUFNLDBCQUEwQixDQUFDO0FBQ25ELE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxpQ0FBaUMsQ0FBQztBQUNoRSxPQUFPLEVBQTJCLFFBQVEsRUFBNkMsTUFBTSxhQUFhLENBQUM7QUFFM0csTUFBTSxPQUFnQixrQkFDcEIsU0FBUSxlQUFvRDtJQUc1RCxZQUFzQixNQUFjLEVBQUUsR0FBUSxFQUFFLElBQXNCO1FBQ3BFLEtBQUssQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQzNCLENBQUM7SUFFUyx3QkFBd0IsQ0FBQyxJQUF1QjtRQUN4RCxJQUFHLElBQUksWUFBWSxTQUFTLEVBQUU7WUFDNUIsSUFBSSxJQUFJLENBQUMsbUJBQW1CLEtBQUssU0FBUyxFQUFFO2dCQUMxQyxJQUFJLENBQUMsbUJBQW1CLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLEVBQUU7b0JBQ2hFLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztnQkFDekMsQ0FBQyxDQUFDLENBQUM7YUFDSjtTQUNGO0lBQ0gsQ0FBQztJQUVTLDBCQUEwQjtRQUNsQyxJQUFJLENBQUMsbUJBQW1CLEVBQUUsV0FBVyxFQUFFLENBQUM7SUFDMUMsQ0FBQztJQUVlLG1CQUFtQixDQUFDLElBQWE7UUFDL0MsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUMxRCxJQUFHLElBQUksWUFBWSxTQUFTLElBQUksSUFBSSxZQUFZLGVBQWUsRUFBRTtnQkFDL0QsSUFBSSxDQUFDLHdCQUF3QixDQUFDLElBQUksQ0FBQyxDQUFDO2FBQ3JDO1lBQ0QsSUFBRyxJQUFJLFlBQVksV0FBVyxFQUFFO2dCQUM5QixJQUFJLENBQUMsbUJBQW1CLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO2dCQUNyQyxPQUFPO2FBQ1I7UUFDSCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFZSxrQkFBa0IsQ0FBQyxJQUFhO1FBQzlDLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDMUQsSUFBRyxJQUFJLFlBQVksV0FBVyxFQUFFO2dCQUM5QixJQUFJLENBQUMscUJBQXFCLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO2dCQUN2QyxPQUFPO2FBQ1I7aUJBQU07Z0JBQ0wsSUFBSSxDQUFDLDBCQUEwQixFQUFFLENBQUM7YUFDbkM7UUFDSCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFZSxNQUFNO1FBQ3BCLElBQUksQ0FBQywwQkFBMEIsRUFBRSxDQUFDO1FBQ2xDLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUNqQixDQUFDO0lBQUEsQ0FBQztDQUNIIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtGU00sIEludGVyYWN0aW9uQmFzZSwgTG9nZ2VyfSBmcm9tICdpbnRlcmFjdG8nO1xuaW1wb3J0IHtTdWJzY3JpcHRpb259IGZyb20gJ3J4anMnO1xuaW1wb3J0IHtNYXRTZWxlY3R9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL3NlbGVjdCc7XG5pbXBvcnQge01hdEJ1dHRvblRvZ2dsZX0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvYnV0dG9uLXRvZ2dsZSc7XG5pbXBvcnQge01hdENoYW5nZSwgTWF0Q2hhbmdlSW1wbCwgTWF0RXZlbnQsIFN1cHBvcnRlZE1hdGVyaWFsLCBTdXBwb3J0ZWRNYXRlcmlhbENoYW5nZX0gZnJvbSAnLi9tYXQtZXZlbnQnO1xuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgTWF0SW50ZXJhY3Rpb25CYXNlPFQgZXh0ZW5kcyBTdXBwb3J0ZWRNYXRlcmlhbENoYW5nZT5cbiAgZXh0ZW5kcyBJbnRlcmFjdGlvbkJhc2U8TWF0Q2hhbmdlPFQ+LCBNYXRDaGFuZ2VJbXBsPFQ+LCBGU00+IHtcbiAgY3VycmVudFN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uIHwgdW5kZWZpbmVkO1xuXG4gIHByb3RlY3RlZCBjb25zdHJ1Y3Rvcihsb2dnZXI6IExvZ2dlciwgZnNtOiBGU00sIGRhdGE6IE1hdENoYW5nZUltcGw8VD4pIHtcbiAgICBzdXBlcihmc20sIGRhdGEsIGxvZ2dlcik7XG4gIH1cblxuICBwcm90ZWN0ZWQgcmVnaXN0ZXJFdmVudFRvTWF0T2JqZWN0KG5vZGU6IFN1cHBvcnRlZE1hdGVyaWFsKTogdm9pZCB7XG4gICAgaWYobm9kZSBpbnN0YW5jZW9mIE1hdFNlbGVjdCkge1xuICAgICAgaWYgKHRoaXMuY3VycmVudFN1YnNjcmlwdGlvbiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHRoaXMuY3VycmVudFN1YnNjcmlwdGlvbiA9IG5vZGUuc2VsZWN0aW9uQ2hhbmdlLnN1YnNjcmliZSh2YWx1ZSA9PiB7XG4gICAgICAgICAgdGhpcy5wcm9jZXNzRXZlbnQobmV3IE1hdEV2ZW50KHZhbHVlKSk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHByb3RlY3RlZCB1bnJlZ2lzdGVyRXZlbnRUb01hdE9iamVjdCgpOiB2b2lkIHtcbiAgICB0aGlzLmN1cnJlbnRTdWJzY3JpcHRpb24/LnVuc3Vic2NyaWJlKCk7XG4gIH1cblxuICBwdWJsaWMgb3ZlcnJpZGUgb25OZXdOb2RlUmVnaXN0ZXJlZChub2RlOiB1bmtub3duKTogdm9pZCB7XG4gICAgdGhpcy5nZXRFdmVudFR5cGVzT2YodGhpcy5fZnNtLmN1cnJlbnRTdGF0ZSkuZm9yRWFjaCh0eXBlID0+IHtcbiAgICAgIGlmKG5vZGUgaW5zdGFuY2VvZiBNYXRTZWxlY3QgfHwgbm9kZSBpbnN0YW5jZW9mIE1hdEJ1dHRvblRvZ2dsZSkge1xuICAgICAgICB0aGlzLnJlZ2lzdGVyRXZlbnRUb01hdE9iamVjdChub2RlKTtcbiAgICAgIH1cbiAgICAgIGlmKG5vZGUgaW5zdGFuY2VvZiBFdmVudFRhcmdldCkge1xuICAgICAgICB0aGlzLnJlZ2lzdGVyRXZlbnRUb05vZGUodHlwZSwgbm9kZSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHB1YmxpYyBvdmVycmlkZSBvbk5vZGVVbnJlZ2lzdGVyZWQobm9kZTogdW5rbm93bik6IHZvaWQge1xuICAgIHRoaXMuZ2V0RXZlbnRUeXBlc09mKHRoaXMuX2ZzbS5jdXJyZW50U3RhdGUpLmZvckVhY2godHlwZSA9PiB7XG4gICAgICBpZihub2RlIGluc3RhbmNlb2YgRXZlbnRUYXJnZXQpIHtcbiAgICAgICAgdGhpcy51bnJlZ2lzdGVyRXZlbnRUb05vZGUodHlwZSwgbm9kZSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMudW5yZWdpc3RlckV2ZW50VG9NYXRPYmplY3QoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHB1YmxpYyBvdmVycmlkZSByZWluaXQoKTogdm9pZCB7XG4gICAgdGhpcy51bnJlZ2lzdGVyRXZlbnRUb01hdE9iamVjdCgpO1xuICAgIHN1cGVyLnJlaW5pdCgpO1xuICB9O1xufVxuIl19