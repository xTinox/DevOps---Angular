import { Component, Input, Optional, ViewChild } from '@angular/core';
import { RedoNTimes, UndoNTimes } from 'interacto';
import * as i0 from "@angular/core";
import * as i1 from "interacto";
import * as i2 from "@angular/common";
import * as i3 from "../../directives/undo-binder.directive";
import * as i4 from "../../directives/redo-binder.directive";
export class LinearHistoryComponent {
    constructor(undoHistory, bindings) {
        this.undoHistory = undoHistory;
        this.bindings = bindings;
        this.svgViewportWidth = 50;
        this.svgViewportHeight = 50;
        this.svgIconSize = 50;
    }
    ngAfterViewInit() {
        this.bindings.buttonBinder()
            .onDynamic(this.undoButtonContainer)
            .toProduce(i => new UndoNTimes(this.undoHistory, parseInt(i.widget?.getAttribute("data-index") ?? "-1", 0)))
            .bind();
        this.bindings.buttonBinder()
            .onDynamic(this.redoButtonContainer)
            .toProduce(i => new RedoNTimes(this.undoHistory, parseInt(i.widget?.getAttribute("data-index") ?? "-1", 0)))
            .bind();
    }
    undoButtonSnapshot(command, button) {
        const snapshot = command.getVisualSnapshot();
        if (snapshot === undefined) {
            return command.getUndoName();
        }
        if (typeof snapshot === 'string') {
            return `${command.getUndoName()}: ${snapshot}`;
        }
        if (snapshot instanceof SVGElement) {
            button.querySelectorAll('div')[0]?.remove();
            const size = `${this.svgIconSize}px`;
            const div = document.createElement("div");
            div.appendChild(snapshot);
            div.style.width = size;
            div.style.height = size;
            snapshot.setAttribute("viewBox", `0 0 ${this.svgViewportWidth} ${this.svgViewportHeight}`);
            snapshot.setAttribute("width", size);
            snapshot.setAttribute("height", size);
            button.querySelectorAll('div')[0]?.remove();
            button.appendChild(div);
            return command.getUndoName();
        }
        return command.getUndoName();
    }
}
LinearHistoryComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.0.4", ngImport: i0, type: LinearHistoryComponent, deps: [{ token: i1.UndoHistory }, { token: i1.Bindings }], target: i0.ɵɵFactoryTarget.Component });
LinearHistoryComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.0.4", type: LinearHistoryComponent, selector: "io-linear-history", inputs: { svgViewportWidth: "svgViewportWidth", svgViewportHeight: "svgViewportHeight", svgIconSize: "svgIconSize" }, viewQueries: [{ propertyName: "undoButtonContainer", first: true, predicate: ["undoButtonContainer"], descendants: true }, { propertyName: "redoButtonContainer", first: true, predicate: ["redoButtonContainer"], descendants: true }], ngImport: i0, template: "\n<div class=\"header\">\n  <h2>HISTORY</h2>\n  <button ioUndo class=\"button-undo-redo\">UNDO</button>\n  <button ioRedo class=\"button-undo-redo\">REDO</button>\n</div>\n\n<div class=\"buttons\">\n  <div #undoButtonContainer>\n    <button #b *ngFor=\"let undoable of undoHistory.getUndo(); index as i\"\n            class=\"history-button-active\" [attr.data-index]=\"undoHistory.getUndo().length - i\">\n      {{undoButtonSnapshot(undoable, b)}}\n    </button>\n    <br/>\n  </div>\n\n  <div #redoButtonContainer>\n    <p *ngIf=\"undoHistory.getRedo().length > 0\">Redo:</p>\n    <button #b *ngFor=\"let _ of undoHistory.getRedo(); index as i\"\n            class=\"history-button-inactive\" [attr.data-index]=\"i + 1\">\n      {{undoButtonSnapshot(undoHistory.getRedo()[undoHistory.getRedo().length - i - 1], b)}}\n    </button>\n    <br/>\n  </div>\n</div>\n", styles: [".header{background-color:#000;min-height:75px;border-bottom-style:solid}.header h2{font-size:25px;text-align:center;padding-top:25px;padding-bottom:25px;margin:0;color:#fff}.button-undo-redo{width:50%;min-height:40px;border-right-style:solid;border-left-style:solid;color:#000;background-color:#fff;border-width:thin;font-size:20px}.history-button-active{width:100%;border-right-style:none;border-left-style:none;color:#000;background-color:#fff;border-width:thin}.history-button-inactive{width:100%;border-right-style:none;border-left-style:none;color:#d3d3d3;background-color:gray;border-width:thin}.header button:disabled{width:50%;border-right-style:solid;border-left-style:solid;color:#000;background-color:#d3d3d3;border-width:thin;font-size:20px}\n"], dependencies: [{ kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i3.UndoBinderDirective, selector: "button:ioUndo,button:[ioUndo]", inputs: ["ioUndo"] }, { kind: "directive", type: i4.RedoBinderDirective, selector: "button:ioRedo,button:[ioRedo]", inputs: ["ioRedo"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.0.4", ngImport: i0, type: LinearHistoryComponent, decorators: [{
            type: Component,
            args: [{ selector: 'io-linear-history', template: "\n<div class=\"header\">\n  <h2>HISTORY</h2>\n  <button ioUndo class=\"button-undo-redo\">UNDO</button>\n  <button ioRedo class=\"button-undo-redo\">REDO</button>\n</div>\n\n<div class=\"buttons\">\n  <div #undoButtonContainer>\n    <button #b *ngFor=\"let undoable of undoHistory.getUndo(); index as i\"\n            class=\"history-button-active\" [attr.data-index]=\"undoHistory.getUndo().length - i\">\n      {{undoButtonSnapshot(undoable, b)}}\n    </button>\n    <br/>\n  </div>\n\n  <div #redoButtonContainer>\n    <p *ngIf=\"undoHistory.getRedo().length > 0\">Redo:</p>\n    <button #b *ngFor=\"let _ of undoHistory.getRedo(); index as i\"\n            class=\"history-button-inactive\" [attr.data-index]=\"i + 1\">\n      {{undoButtonSnapshot(undoHistory.getRedo()[undoHistory.getRedo().length - i - 1], b)}}\n    </button>\n    <br/>\n  </div>\n</div>\n", styles: [".header{background-color:#000;min-height:75px;border-bottom-style:solid}.header h2{font-size:25px;text-align:center;padding-top:25px;padding-bottom:25px;margin:0;color:#fff}.button-undo-redo{width:50%;min-height:40px;border-right-style:solid;border-left-style:solid;color:#000;background-color:#fff;border-width:thin;font-size:20px}.history-button-active{width:100%;border-right-style:none;border-left-style:none;color:#000;background-color:#fff;border-width:thin}.history-button-inactive{width:100%;border-right-style:none;border-left-style:none;color:#d3d3d3;background-color:gray;border-width:thin}.header button:disabled{width:50%;border-right-style:solid;border-left-style:solid;color:#000;background-color:#d3d3d3;border-width:thin;font-size:20px}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.UndoHistory }, { type: i1.Bindings }]; }, propDecorators: { undoButtonContainer: [{
                type: ViewChild,
                args: ['undoButtonContainer']
            }], redoButtonContainer: [{
                type: ViewChild,
                args: ['redoButtonContainer']
            }], svgViewportWidth: [{
                type: Input
            }, {
                type: Optional
            }], svgViewportHeight: [{
                type: Input
            }, {
                type: Optional
            }], svgIconSize: [{
                type: Input
            }, {
                type: Optional
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGluZWFyLWhpc3RvcnkuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvaW50ZXJhY3RvLWFuZ3VsYXIvc3JjL2xpYi9jb21wb25lbnRzL2xpbmVhci1oaXN0b3J5L2xpbmVhci1oaXN0b3J5LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ludGVyYWN0by1hbmd1bGFyL3NyYy9saWIvY29tcG9uZW50cy9saW5lYXItaGlzdG9yeS9saW5lYXItaGlzdG9yeS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQWdCLFNBQVMsRUFBYyxLQUFLLEVBQUUsUUFBUSxFQUFFLFNBQVMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUMvRixPQUFPLEVBQVcsVUFBVSxFQUEwQyxVQUFVLEVBQUMsTUFBTSxXQUFXLENBQUM7Ozs7OztBQU9uRyxNQUFNLE9BQU8sc0JBQXNCO0lBb0JqQyxZQUEwQixXQUF3QixFQUFTLFFBQW1DO1FBQXBFLGdCQUFXLEdBQVgsV0FBVyxDQUFhO1FBQVMsYUFBUSxHQUFSLFFBQVEsQ0FBMkI7UUFYdkYscUJBQWdCLEdBQVcsRUFBRSxDQUFDO1FBSTlCLHNCQUFpQixHQUFXLEVBQUUsQ0FBQztRQUkvQixnQkFBVyxHQUFXLEVBQUUsQ0FBQztJQUloQyxDQUFDO0lBR00sZUFBZTtRQUNwQixJQUFJLENBQUMsUUFBUSxDQUFDLFlBQVksRUFBRTthQUN6QixTQUFTLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDO2FBQ25DLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksVUFBVSxDQUM1QixJQUFJLENBQUMsV0FBVyxFQUNoQixRQUFRLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxZQUFZLENBQUMsWUFBWSxDQUFDLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDNUQsSUFBSSxFQUFFLENBQUM7UUFFVixJQUFJLENBQUMsUUFBUSxDQUFDLFlBQVksRUFBRTthQUN6QixTQUFTLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDO2FBQ25DLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksVUFBVSxDQUM1QixJQUFJLENBQUMsV0FBVyxFQUNoQixRQUFRLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxZQUFZLENBQUMsWUFBWSxDQUFDLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDNUQsSUFBSSxFQUFFLENBQUM7SUFDWixDQUFDO0lBR00sa0JBQWtCLENBQUMsT0FBaUIsRUFBRSxNQUF5QjtRQUNwRSxNQUFNLFFBQVEsR0FBRyxPQUFPLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztRQUM3QyxJQUFHLFFBQVEsS0FBSyxTQUFTLEVBQUU7WUFDekIsT0FBTyxPQUFPLENBQUMsV0FBVyxFQUFFLENBQUM7U0FDOUI7UUFFRCxJQUFJLE9BQU8sUUFBUSxLQUFLLFFBQVEsRUFBRTtZQUNoQyxPQUFPLEdBQUcsT0FBTyxDQUFDLFdBQVcsRUFBRSxLQUFLLFFBQVEsRUFBRSxDQUFDO1NBQ2hEO1FBRUQsSUFBSSxRQUFRLFlBQVksVUFBVSxFQUFFO1lBQ2xDLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxNQUFNLEVBQUUsQ0FBQztZQUU1QyxNQUFNLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxXQUFXLElBQUksQ0FBQztZQUNyQyxNQUFNLEdBQUcsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQzFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDMUIsR0FBRyxDQUFDLEtBQUssQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO1lBQ3ZCLEdBQUcsQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztZQUN4QixRQUFRLENBQUMsWUFBWSxDQUFDLFNBQVMsRUFBRSxPQUFPLElBQUksQ0FBQyxnQkFBZ0IsSUFBSSxJQUFJLENBQUMsaUJBQWlCLEVBQUUsQ0FBQyxDQUFDO1lBQzNGLFFBQVEsQ0FBQyxZQUFZLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQ3JDLFFBQVEsQ0FBQyxZQUFZLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQ3RDLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxNQUFNLEVBQUUsQ0FBQztZQUM1QyxNQUFNLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ3hCLE9BQU8sT0FBTyxDQUFDLFdBQVcsRUFBRSxDQUFDO1NBQzlCO1FBRUQsT0FBTyxPQUFPLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDL0IsQ0FBQzs7bUhBcEVVLHNCQUFzQjt1R0FBdEIsc0JBQXNCLHdaQ1JuQyxpMkJBeUJBOzJGRGpCYSxzQkFBc0I7a0JBTGxDLFNBQVM7K0JBQ0UsbUJBQW1CO3lIQU10QixtQkFBbUI7c0JBRHpCLFNBQVM7dUJBQUMscUJBQXFCO2dCQUl6QixtQkFBbUI7c0JBRHpCLFNBQVM7dUJBQUMscUJBQXFCO2dCQUt6QixnQkFBZ0I7c0JBRnRCLEtBQUs7O3NCQUNMLFFBQVE7Z0JBS0YsaUJBQWlCO3NCQUZ2QixLQUFLOztzQkFDTCxRQUFRO2dCQUtGLFdBQVc7c0JBRmpCLEtBQUs7O3NCQUNMLFFBQVEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0FmdGVyVmlld0luaXQsIENvbXBvbmVudCwgRWxlbWVudFJlZiwgSW5wdXQsIE9wdGlvbmFsLCBWaWV3Q2hpbGR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtCaW5kaW5ncywgUmVkb05UaW1lcywgVW5kb2FibGUsIFVuZG9IaXN0b3J5LCBVbmRvSGlzdG9yeUJhc2UsIFVuZG9OVGltZXN9IGZyb20gJ2ludGVyYWN0byc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2lvLWxpbmVhci1oaXN0b3J5JyxcbiAgdGVtcGxhdGVVcmw6ICcuL2xpbmVhci1oaXN0b3J5LmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vbGluZWFyLWhpc3RvcnkuY29tcG9uZW50LmNzcyddXG59KVxuZXhwb3J0IGNsYXNzIExpbmVhckhpc3RvcnlDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0IHtcbiAgQFZpZXdDaGlsZCgndW5kb0J1dHRvbkNvbnRhaW5lcicpXG4gIHB1YmxpYyB1bmRvQnV0dG9uQ29udGFpbmVyOiBFbGVtZW50UmVmPEhUTUxFbGVtZW50PjtcblxuICBAVmlld0NoaWxkKCdyZWRvQnV0dG9uQ29udGFpbmVyJylcbiAgcHVibGljIHJlZG9CdXR0b25Db250YWluZXI6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+O1xuXG4gIEBJbnB1dCgpXG4gIEBPcHRpb25hbCgpXG4gIHB1YmxpYyBzdmdWaWV3cG9ydFdpZHRoOiBudW1iZXIgPSA1MDtcblxuICBASW5wdXQoKVxuICBAT3B0aW9uYWwoKVxuICBwdWJsaWMgc3ZnVmlld3BvcnRIZWlnaHQ6IG51bWJlciA9IDUwO1xuXG4gIEBJbnB1dCgpXG4gIEBPcHRpb25hbCgpXG4gIHB1YmxpYyBzdmdJY29uU2l6ZTogbnVtYmVyID0gNTA7XG5cblxuICBwdWJsaWMgY29uc3RydWN0b3IocHVibGljIHVuZG9IaXN0b3J5OiBVbmRvSGlzdG9yeSwgcHVibGljIGJpbmRpbmdzOiBCaW5kaW5nczxVbmRvSGlzdG9yeUJhc2U+KSB7XG4gIH1cblxuXG4gIHB1YmxpYyBuZ0FmdGVyVmlld0luaXQoKTogdm9pZCB7XG4gICAgdGhpcy5iaW5kaW5ncy5idXR0b25CaW5kZXIoKVxuICAgICAgLm9uRHluYW1pYyh0aGlzLnVuZG9CdXR0b25Db250YWluZXIpXG4gICAgICAudG9Qcm9kdWNlKGkgPT4gbmV3IFVuZG9OVGltZXMoXG4gICAgICAgIHRoaXMudW5kb0hpc3RvcnksXG4gICAgICAgIHBhcnNlSW50KGkud2lkZ2V0Py5nZXRBdHRyaWJ1dGUoXCJkYXRhLWluZGV4XCIpID8/IFwiLTFcIiwgMCkpKVxuICAgICAgLmJpbmQoKTtcblxuICAgIHRoaXMuYmluZGluZ3MuYnV0dG9uQmluZGVyKClcbiAgICAgIC5vbkR5bmFtaWModGhpcy5yZWRvQnV0dG9uQ29udGFpbmVyKVxuICAgICAgLnRvUHJvZHVjZShpID0+IG5ldyBSZWRvTlRpbWVzKFxuICAgICAgICB0aGlzLnVuZG9IaXN0b3J5LFxuICAgICAgICBwYXJzZUludChpLndpZGdldD8uZ2V0QXR0cmlidXRlKFwiZGF0YS1pbmRleFwiKSA/PyBcIi0xXCIsIDApKSlcbiAgICAgIC5iaW5kKCk7XG4gIH1cblxuXG4gIHB1YmxpYyB1bmRvQnV0dG9uU25hcHNob3QoY29tbWFuZDogVW5kb2FibGUsIGJ1dHRvbjogSFRNTEJ1dHRvbkVsZW1lbnQpOiBhbnkge1xuICAgIGNvbnN0IHNuYXBzaG90ID0gY29tbWFuZC5nZXRWaXN1YWxTbmFwc2hvdCgpO1xuICAgIGlmKHNuYXBzaG90ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiBjb21tYW5kLmdldFVuZG9OYW1lKCk7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBzbmFwc2hvdCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHJldHVybiBgJHtjb21tYW5kLmdldFVuZG9OYW1lKCl9OiAke3NuYXBzaG90fWA7XG4gICAgfVxuXG4gICAgaWYgKHNuYXBzaG90IGluc3RhbmNlb2YgU1ZHRWxlbWVudCkge1xuICAgICAgYnV0dG9uLnF1ZXJ5U2VsZWN0b3JBbGwoJ2RpdicpWzBdPy5yZW1vdmUoKTtcblxuICAgICAgY29uc3Qgc2l6ZSA9IGAke3RoaXMuc3ZnSWNvblNpemV9cHhgO1xuICAgICAgY29uc3QgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgIGRpdi5hcHBlbmRDaGlsZChzbmFwc2hvdCk7XG4gICAgICBkaXYuc3R5bGUud2lkdGggPSBzaXplO1xuICAgICAgZGl2LnN0eWxlLmhlaWdodCA9IHNpemU7XG4gICAgICBzbmFwc2hvdC5zZXRBdHRyaWJ1dGUoXCJ2aWV3Qm94XCIsIGAwIDAgJHt0aGlzLnN2Z1ZpZXdwb3J0V2lkdGh9ICR7dGhpcy5zdmdWaWV3cG9ydEhlaWdodH1gKTtcbiAgICAgIHNuYXBzaG90LnNldEF0dHJpYnV0ZShcIndpZHRoXCIsIHNpemUpO1xuICAgICAgc25hcHNob3Quc2V0QXR0cmlidXRlKFwiaGVpZ2h0XCIsIHNpemUpO1xuICAgICAgYnV0dG9uLnF1ZXJ5U2VsZWN0b3JBbGwoJ2RpdicpWzBdPy5yZW1vdmUoKTtcbiAgICAgIGJ1dHRvbi5hcHBlbmRDaGlsZChkaXYpO1xuICAgICAgcmV0dXJuIGNvbW1hbmQuZ2V0VW5kb05hbWUoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gY29tbWFuZC5nZXRVbmRvTmFtZSgpO1xuICB9XG59XG4iLCJcbjxkaXYgY2xhc3M9XCJoZWFkZXJcIj5cbiAgPGgyPkhJU1RPUlk8L2gyPlxuICA8YnV0dG9uIGlvVW5kbyBjbGFzcz1cImJ1dHRvbi11bmRvLXJlZG9cIj5VTkRPPC9idXR0b24+XG4gIDxidXR0b24gaW9SZWRvIGNsYXNzPVwiYnV0dG9uLXVuZG8tcmVkb1wiPlJFRE88L2J1dHRvbj5cbjwvZGl2PlxuXG48ZGl2IGNsYXNzPVwiYnV0dG9uc1wiPlxuICA8ZGl2ICN1bmRvQnV0dG9uQ29udGFpbmVyPlxuICAgIDxidXR0b24gI2IgKm5nRm9yPVwibGV0IHVuZG9hYmxlIG9mIHVuZG9IaXN0b3J5LmdldFVuZG8oKTsgaW5kZXggYXMgaVwiXG4gICAgICAgICAgICBjbGFzcz1cImhpc3RvcnktYnV0dG9uLWFjdGl2ZVwiIFthdHRyLmRhdGEtaW5kZXhdPVwidW5kb0hpc3RvcnkuZ2V0VW5kbygpLmxlbmd0aCAtIGlcIj5cbiAgICAgIHt7dW5kb0J1dHRvblNuYXBzaG90KHVuZG9hYmxlLCBiKX19XG4gICAgPC9idXR0b24+XG4gICAgPGJyLz5cbiAgPC9kaXY+XG5cbiAgPGRpdiAjcmVkb0J1dHRvbkNvbnRhaW5lcj5cbiAgICA8cCAqbmdJZj1cInVuZG9IaXN0b3J5LmdldFJlZG8oKS5sZW5ndGggPiAwXCI+UmVkbzo8L3A+XG4gICAgPGJ1dHRvbiAjYiAqbmdGb3I9XCJsZXQgXyBvZiB1bmRvSGlzdG9yeS5nZXRSZWRvKCk7IGluZGV4IGFzIGlcIlxuICAgICAgICAgICAgY2xhc3M9XCJoaXN0b3J5LWJ1dHRvbi1pbmFjdGl2ZVwiIFthdHRyLmRhdGEtaW5kZXhdPVwiaSArIDFcIj5cbiAgICAgIHt7dW5kb0J1dHRvblNuYXBzaG90KHVuZG9IaXN0b3J5LmdldFJlZG8oKVt1bmRvSGlzdG9yeS5nZXRSZWRvKCkubGVuZ3RoIC0gaSAtIDFdLCBiKX19XG4gICAgPC9idXR0b24+XG4gICAgPGJyLz5cbiAgPC9kaXY+XG48L2Rpdj5cbiJdfQ==