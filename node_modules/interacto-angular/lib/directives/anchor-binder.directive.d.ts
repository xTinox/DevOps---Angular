import { ElementRef, EventEmitter, ViewContainerRef } from '@angular/core';
import { Binding, Bindings, PartialAnchorBinder, UndoHistoryBase } from 'interacto';
import { InteractoBinderDirective } from './interacto-binder-directive';
import { OnDynamicDirective } from './on-dynamic.directive';
import * as i0 from "@angular/core";
export declare class AnchorBinderDirective extends InteractoBinderDirective<HTMLAnchorElement, PartialAnchorBinder> {
    private bindings;
    private readonly aBinder;
    constructor(onDyn: OnDynamicDirective, element: ElementRef<HTMLAnchorElement>, viewContainerRef: ViewContainerRef, bindings: Bindings<UndoHistoryBase>);
    set ioAnchor(fn: ((partialBinder: PartialAnchorBinder, widget: HTMLAnchorElement) => Binding<any, any, any> | Array<Binding<any, any, any>> | void) | undefined | string);
    protected createPartialBinder(): PartialAnchorBinder;
    protected getOutputEvent(): EventEmitter<PartialAnchorBinder>;
    static ɵfac: i0.ɵɵFactoryDeclaration<AnchorBinderDirective, [{ optional: true; host: true; }, null, null, null]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<AnchorBinderDirective, "a:[ioAnchor],[ioAnchor] [ioOnDynamic]", never, { "ioAnchor": "ioAnchor"; }, { "aBinder": "aBinder"; }, never, never, false>;
}
