import { ElementRef, EventEmitter, ViewContainerRef } from '@angular/core';
import { Binding, Bindings, PartialSelectBinder, UndoHistoryBase } from 'interacto';
import { InteractoBinderDirective } from './interacto-binder-directive';
import { OnDynamicDirective } from './on-dynamic.directive';
import * as i0 from "@angular/core";
export declare class SelectBinderDirective extends InteractoBinderDirective<HTMLSelectElement, PartialSelectBinder> {
    private bindings;
    private readonly selectBinder;
    constructor(onDyn: OnDynamicDirective, element: ElementRef<HTMLSelectElement>, viewContainerRef: ViewContainerRef, bindings: Bindings<UndoHistoryBase>);
    set ioSelect(fn: ((partialBinder: PartialSelectBinder, widget: HTMLSelectElement) => Binding<any, any, any> | Array<Binding<any, any, any>> | void) | undefined | string);
    protected createPartialBinder(): PartialSelectBinder;
    protected getOutputEvent(): EventEmitter<PartialSelectBinder>;
    static ɵfac: i0.ɵɵFactoryDeclaration<SelectBinderDirective, [{ optional: true; host: true; }, null, null, null]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<SelectBinderDirective, "select:[ioSelect], [ioSelect] [ioOnDynamic]", never, { "ioSelect": "ioSelect"; }, { "selectBinder": "selectBinder"; }, never, never, false>;
}
