import { EventEmitter, ViewContainerRef } from '@angular/core';
import { Binding, UndoHistoryBase } from 'interacto';
import { InteractoBinderDirective } from './interacto-binder-directive';
import { OnDynamicDirective } from './on-dynamic.directive';
import { AngularBindings, PartialMatSelectBinder } from '../base/angular-bindings';
import { MatSelect } from '@angular/material/select';
import * as i0 from "@angular/core";
export declare class MatSelectBinderDirective extends InteractoBinderDirective<MatSelect, PartialMatSelectBinder> {
    private bindings;
    private readonly matSelectBinder;
    constructor(onDyn: OnDynamicDirective, viewContainerRef: ViewContainerRef, bindings: AngularBindings<UndoHistoryBase>, select: MatSelect);
    set ioMatSelect(fn: ((partialBinder: PartialMatSelectBinder, widget: MatSelect) => Binding<any, any, any> | Array<Binding<any, any, any>> | void) | undefined | string);
    protected createPartialBinder(): PartialMatSelectBinder;
    protected getOutputEvent(): EventEmitter<PartialMatSelectBinder>;
    static ɵfac: i0.ɵɵFactoryDeclaration<MatSelectBinderDirective, [{ optional: true; host: true; }, null, null, null]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<MatSelectBinderDirective, "mat-select:[ioMatSelect],[ioMatSelect] [ioOnDynamic]", never, { "ioMatSelect": "ioMatSelect"; }, { "matSelectBinder": "matSelectBinder"; }, never, never, false>;
}
