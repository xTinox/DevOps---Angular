import { ChangeDetectorRef, ElementRef, EventEmitter, ViewContainerRef } from '@angular/core';
import { Binding, Bindings, PartialTouchBinder, UndoHistoryBase } from 'interacto';
import { OnDynamicDirective } from './on-dynamic.directive';
import { InteractoBinderDirective } from './interacto-binder-directive';
import * as i0 from "@angular/core";
export declare class LongTouchBinderDirective extends InteractoBinderDirective<HTMLElement, PartialTouchBinder> {
    private bindings;
    private readonly longTouchBinder;
    constructor(onDyn: OnDynamicDirective, element: ElementRef<HTMLElement>, viewContainerRef: ViewContainerRef, changeDetectorRef: ChangeDetectorRef, bindings: Bindings<UndoHistoryBase>);
    /**
     * The duration of the touch to end the user interaction.
     * If this duration is not reached, the interaction is cancelled.
     */
    duration: number;
    /**
     * Starts the creation of a binding using the long touch interaction.
     * @param fn - The function of the component that will be called to configure the binding.
     */
    set ioLongTouch(fn: ((partialBinder: PartialTouchBinder, widget: HTMLElement) => Binding<any, any, any> | Array<Binding<any, any, any>> | void) | undefined | string);
    protected createPartialBinder(): PartialTouchBinder;
    protected getOutputEvent(): EventEmitter<PartialTouchBinder>;
    static ɵfac: i0.ɵɵFactoryDeclaration<LongTouchBinderDirective, [{ optional: true; host: true; }, null, null, null, null]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<LongTouchBinderDirective, "[ioLongTouch]", never, { "duration": "duration"; "ioLongTouch": "ioLongTouch"; }, { "longTouchBinder": "longTouchBinder"; }, never, never, false>;
}
