import { ElementRef, EventEmitter, ViewContainerRef } from '@angular/core';
import { Binding, Bindings, PartialUpdatePointBinder, UndoHistoryBase } from 'interacto';
import { OnDynamicDirective } from './on-dynamic.directive';
import { InteractoBinderDirective } from './interacto-binder-directive';
import * as i0 from "@angular/core";
export declare class DoubleClickBinderDirective extends InteractoBinderDirective<HTMLElement, PartialUpdatePointBinder> {
    private bindings;
    private readonly dbleclickBinder;
    constructor(onDyn: OnDynamicDirective, element: ElementRef<HTMLElement>, viewContainerRef: ViewContainerRef, bindings: Bindings<UndoHistoryBase>);
    /**
     * Starts the creation of a binding using the double-click interaction.
     * @param fn - The function of the component that will be called to configure the binding.
     */
    set ioDoubleClick(fn: ((partialBinder: PartialUpdatePointBinder, widget: HTMLElement) => Binding<any, any, any> | Array<Binding<any, any, any>> | void) | undefined | string);
    protected createPartialBinder(): PartialUpdatePointBinder;
    protected getOutputEvent(): EventEmitter<PartialUpdatePointBinder>;
    static ɵfac: i0.ɵɵFactoryDeclaration<DoubleClickBinderDirective, [{ optional: true; host: true; }, null, null, null]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<DoubleClickBinderDirective, "[ioDoubleClick]", never, { "ioDoubleClick": "ioDoubleClick"; }, { "dbleclickBinder": "dbleclickBinder"; }, never, never, false>;
}
