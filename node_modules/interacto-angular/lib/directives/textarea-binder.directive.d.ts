import { ElementRef, EventEmitter, ViewContainerRef } from '@angular/core';
import { Binding, Bindings, UndoHistoryBase } from 'interacto';
import { InteractoBinderDirective } from './interacto-binder-directive';
import { OnDynamicDirective } from './on-dynamic.directive';
import { PartialTextInputBinder } from 'interacto/dist/api/binding/Bindings';
import * as i0 from "@angular/core";
export declare class TextAreaBinderDirective extends InteractoBinderDirective<HTMLTextAreaElement, PartialTextInputBinder> {
    private bindings;
    private readonly textareaBinder;
    constructor(onDyn: OnDynamicDirective, element: ElementRef<HTMLTextAreaElement>, viewContainerRef: ViewContainerRef, bindings: Bindings<UndoHistoryBase>);
    set ioTextarea(fn: ((partialBinder: PartialTextInputBinder, widget: HTMLTextAreaElement) => Binding<any, any, any> | Array<Binding<any, any, any>> | void) | undefined | string);
    protected createPartialBinder(): PartialTextInputBinder;
    protected getOutputEvent(): EventEmitter<PartialTextInputBinder>;
    static ɵfac: i0.ɵɵFactoryDeclaration<TextAreaBinderDirective, [{ optional: true; host: true; }, null, null, null]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TextAreaBinderDirective, "textarea:[ioTextarea], [ioTextarea] [ioOnDynamic]", never, { "ioTextarea": "ioTextarea"; }, { "textareaBinder": "textareaBinder"; }, never, never, false>;
}
