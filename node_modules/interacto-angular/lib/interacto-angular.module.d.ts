import { Provider } from '@angular/core';
import { TreeUndoHistory, UndoHistory, UndoHistoryBase } from 'interacto';
import { AngularBindings } from './base/angular-bindings';
import * as i0 from "@angular/core";
import * as i1 from "./components/linear-history/linear-history.component";
import * as i2 from "./components/tree-history/tree-history.component";
import * as i3 from "./directives/clicks-binder.directive";
import * as i4 from "./directives/click-binder.directive";
import * as i5 from "./directives/dble-click-binder.directive";
import * as i6 from "./directives/undo-binder.directive";
import * as i7 from "./directives/redo-binder.directive";
import * as i8 from "./directives/drag-lock-binder.directive";
import * as i9 from "./directives/keydown-binder.directive";
import * as i10 from "./directives/keyup-binder.directive";
import * as i11 from "./directives/keysdown-binder.directive";
import * as i12 from "./directives/key-type-binder.directive";
import * as i13 from "./directives/keys-type-binder.directive";
import * as i14 from "./directives/dnd-binder.directive";
import * as i15 from "./directives/long-mousedown-binder.directive";
import * as i16 from "./directives/long-touch-binder.directive";
import * as i17 from "./directives/multi-touch-binder.directive";
import * as i18 from "./directives/pan-binder.directive";
import * as i19 from "./directives/mousedown-binder.directive";
import * as i20 from "./directives/mousemove-binder.directive";
import * as i21 from "./directives/mouseenter-binder.directive";
import * as i22 from "./directives/mouseleave-binder.directive";
import * as i23 from "./directives/mouseup-binder.directive";
import * as i24 from "./directives/swipe-binder.directive";
import * as i25 from "./directives/tap-binder.directive";
import * as i26 from "./directives/textarea-binder.directive";
import * as i27 from "./directives/textinput-binder.directive";
import * as i28 from "./directives/button-binder.directive";
import * as i29 from "./directives/input-binder.directive";
import * as i30 from "./directives/select-binder.directive";
import * as i31 from "./directives/anchor-binder.directive";
import * as i32 from "./directives/mat-select-binder.directive";
import * as i33 from "./directives/focus-on-mouse-enter.directive";
import * as i34 from "./directives/on-dynamic.directive";
import * as i35 from "@angular/common";
/**
 * Provides an undo history of the provided Bindings object
 * @param ctx The bindings object that contains the history
 * @typeParam T -- The type of the undo history
 */
export declare function undoHistoryFactory<T extends UndoHistoryBase>(ctx: AngularBindings<T>): T;
/**
 * Provides a Bindings object that uses a standard linear undo history
 */
export declare function bindingsLinearUndoHistoryFactory(): AngularBindings<UndoHistory>;
/**
 * Provides a Bindings object that uses a standard linear undo history
 */
export declare function bindingsTreeUndoHistoryFactory(keepHistoryTraces: boolean): AngularBindings<TreeUndoHistory>;
/**
 * Provides dependency injection for Interacto.
 * Useful for injecting a specific bindings and undo history to an Angular component.
 * This injection will use a classical linear undo history. For other kinds of undo algorithm, see
 * the other providers.
 * This undo algorithm is the default one Interacto uses.
 */
export declare function interactoProviders(): Provider[];
/**
 * Provides dependency injection for Interacto.
 * Useful for injecting a specific bindings and undo history to an Angular component.
 * This injection will use a tree undo history. For other kinds of undo algorithm, see
 * the other providers.
 * @param keepHistoryTraces - States whether the history will keep in memory the ordered
 * sequence of commands the users performed. This allows to keep traces about the design process.
 * If set to true, users would not be able to delete history elements.
 */
export declare function interactoTreeUndoProviders(keepHistoryTraces?: boolean): Provider[];
export declare class InteractoModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<InteractoModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<InteractoModule, [typeof i1.LinearHistoryComponent, typeof i2.TreeHistoryComponent, typeof i3.ClicksBinderDirective, typeof i4.ClickBinderDirective, typeof i5.DoubleClickBinderDirective, typeof i6.UndoBinderDirective, typeof i7.RedoBinderDirective, typeof i8.DragLockBinderDirective, typeof i9.KeydownBinderDirective, typeof i10.KeyupBinderDirective, typeof i11.KeysdownBinderDirective, typeof i12.KeyTypeBinderDirective, typeof i13.KeysTypeBinderDirective, typeof i14.DndBinderDirective, typeof i15.LongMousedownBinderDirective, typeof i16.LongTouchBinderDirective, typeof i17.MultiTouchBinderDirective, typeof i18.PanBinderDirective, typeof i19.MousedownBinderDirective, typeof i20.MousemoveBinderDirective, typeof i21.MouseenterBinderDirective, typeof i22.MouseleaveBinderDirective, typeof i23.MouseupBinderDirective, typeof i24.SwipeBinderDirective, typeof i25.TapBinderDirective, typeof i26.TextAreaBinderDirective, typeof i27.TextInputBinderDirective, typeof i28.ButtonBinderDirective, typeof i29.InputBinderDirective, typeof i30.SelectBinderDirective, typeof i31.AnchorBinderDirective, typeof i32.MatSelectBinderDirective, typeof i33.FocusOnMouseEnterDirective, typeof i34.OnDynamicDirective], [typeof i35.CommonModule], [typeof i1.LinearHistoryComponent, typeof i2.TreeHistoryComponent, typeof i3.ClicksBinderDirective, typeof i4.ClickBinderDirective, typeof i5.DoubleClickBinderDirective, typeof i6.UndoBinderDirective, typeof i7.RedoBinderDirective, typeof i8.DragLockBinderDirective, typeof i9.KeydownBinderDirective, typeof i10.KeyupBinderDirective, typeof i11.KeysdownBinderDirective, typeof i12.KeyTypeBinderDirective, typeof i13.KeysTypeBinderDirective, typeof i14.DndBinderDirective, typeof i15.LongMousedownBinderDirective, typeof i16.LongTouchBinderDirective, typeof i17.MultiTouchBinderDirective, typeof i18.PanBinderDirective, typeof i19.MousedownBinderDirective, typeof i20.MousemoveBinderDirective, typeof i21.MouseenterBinderDirective, typeof i22.MouseleaveBinderDirective, typeof i23.MouseupBinderDirective, typeof i24.SwipeBinderDirective, typeof i25.TapBinderDirective, typeof i26.TextAreaBinderDirective, typeof i27.TextInputBinderDirective, typeof i28.ButtonBinderDirective, typeof i29.InputBinderDirective, typeof i30.SelectBinderDirective, typeof i31.AnchorBinderDirective, typeof i32.MatSelectBinderDirective, typeof i33.FocusOnMouseEnterDirective, typeof i34.OnDynamicDirective]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<InteractoModule>;
}
