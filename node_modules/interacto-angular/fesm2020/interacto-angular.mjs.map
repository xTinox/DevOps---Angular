{"version":3,"file":"interacto-angular.mjs","sources":["../../../projects/interacto-angular/src/lib/material/mat-event.ts","../../../projects/interacto-angular/src/lib/material/mat-interaction-base.ts","../../../projects/interacto-angular/src/lib/material/mat-select-change-transition.ts","../../../projects/interacto-angular/src/lib/material/mat-select-interaction.ts","../../../projects/interacto-angular/src/lib/base/angular-bindings.ts","../../../projects/interacto-angular/src/lib/directives/interacto-binder-directive.ts","../../../projects/interacto-angular/src/lib/directives/undo-binder.directive.ts","../../../projects/interacto-angular/src/lib/directives/redo-binder.directive.ts","../../../projects/interacto-angular/src/lib/components/linear-history/linear-history.component.ts","../../../projects/interacto-angular/src/lib/components/linear-history/linear-history.component.html","../../../projects/interacto-angular/src/lib/directives/on-dynamic.directive.ts","../../../projects/interacto-angular/src/lib/directives/click-binder.directive.ts","../../../projects/interacto-angular/src/lib/components/tree-history/tree-history.component.ts","../../../projects/interacto-angular/src/lib/components/tree-history/tree-history.component.html","../../../projects/interacto-angular/src/lib/directives/anchor-binder.directive.ts","../../../projects/interacto-angular/src/lib/directives/button-binder.directive.ts","../../../projects/interacto-angular/src/lib/directives/clicks-binder.directive.ts","../../../projects/interacto-angular/src/lib/directives/dble-click-binder.directive.ts","../../../projects/interacto-angular/src/lib/directives/dnd-binder.directive.ts","../../../projects/interacto-angular/src/lib/directives/drag-lock-binder.directive.ts","../../../projects/interacto-angular/src/lib/directives/focus-on-mouse-enter.directive.ts","../../../projects/interacto-angular/src/lib/directives/input-binder.directive.ts","../../../projects/interacto-angular/src/lib/directives/keydown-binder.directive.ts","../../../projects/interacto-angular/src/lib/directives/keyup-binder.directive.ts","../../../projects/interacto-angular/src/lib/directives/keysdown-binder.directive.ts","../../../projects/interacto-angular/src/lib/directives/key-type-binder.directive.ts","../../../projects/interacto-angular/src/lib/directives/keys-type-binder.directive.ts","../../../projects/interacto-angular/src/lib/directives/long-touch-binder.directive.ts","../../../projects/interacto-angular/src/lib/directives/long-mousedown-binder.directive.ts","../../../projects/interacto-angular/src/lib/directives/multi-touch-binder.directive.ts","../../../projects/interacto-angular/src/lib/directives/pan-binder.directive.ts","../../../projects/interacto-angular/src/lib/directives/mousedown-binder.directive.ts","../../../projects/interacto-angular/src/lib/directives/mousemove-binder.directive.ts","../../../projects/interacto-angular/src/lib/directives/mouseenter-binder.directive.ts","../../../projects/interacto-angular/src/lib/directives/mouseleave-binder.directive.ts","../../../projects/interacto-angular/src/lib/directives/mouseup-binder.directive.ts","../../../projects/interacto-angular/src/lib/directives/select-binder.directive.ts","../../../projects/interacto-angular/src/lib/directives/swipe-binder.directive.ts","../../../projects/interacto-angular/src/lib/directives/tap-binder.directive.ts","../../../projects/interacto-angular/src/lib/directives/textarea-binder.directive.ts","../../../projects/interacto-angular/src/lib/directives/textinput-binder.directive.ts","../../../projects/interacto-angular/src/lib/directives/mat-select-binder.directive.ts","../../../projects/interacto-angular/src/lib/interacto-angular.module.ts","../../../projects/interacto-angular/src/lib/testing-interacto-angular.module.ts","../../../projects/interacto-angular/src/public-api.ts","../../../projects/interacto-angular/src/interacto-angular.ts"],"sourcesContent":["import {MatSelect, MatSelectChange} from '@angular/material/select';\nimport {MatButtonToggle, MatButtonToggleChange} from '@angular/material/button-toggle';\nimport {Flushable} from 'interacto';\n\n\nexport type SupportedMaterial = MatSelect | MatButtonToggle;\n\nexport type SupportedMaterialChange = MatSelectChange | MatButtonToggleChange;\n\n\nexport class MatEvent<T extends SupportedMaterialChange> extends Event {\n  public constructor(public readonly change: T) {\n    super(\"material\");\n  }\n}\n\n\nexport interface MatChange<T extends SupportedMaterialChange> {\n  change: T | undefined;\n}\n\nexport class MatChangeImpl<T extends SupportedMaterialChange> implements MatChange<T>, Flushable {\n  public _change: T | undefined;\n\n  public constructor() {\n  }\n\n  public get change(): T | undefined {\n    return this._change;\n  }\n\n  public flush(): void {\n    this._change = undefined;\n  }\n}\n","import {FSM, InteractionBase, Logger} from 'interacto';\nimport {Subscription} from 'rxjs';\nimport {MatSelect} from '@angular/material/select';\nimport {MatButtonToggle} from '@angular/material/button-toggle';\nimport {MatChange, MatChangeImpl, MatEvent, SupportedMaterial, SupportedMaterialChange} from './mat-event';\n\nexport abstract class MatInteractionBase<T extends SupportedMaterialChange>\n  extends InteractionBase<MatChange<T>, MatChangeImpl<T>, FSM> {\n  currentSubscription: Subscription | undefined;\n\n  protected constructor(logger: Logger, fsm: FSM, data: MatChangeImpl<T>) {\n    super(fsm, data, logger);\n  }\n\n  protected registerEventToMatObject(node: SupportedMaterial): void {\n    if(node instanceof MatSelect) {\n      if (this.currentSubscription === undefined) {\n        this.currentSubscription = node.selectionChange.subscribe(value => {\n          this.processEvent(new MatEvent(value));\n        });\n      }\n    }\n  }\n\n  protected unregisterEventToMatObject(): void {\n    this.currentSubscription?.unsubscribe();\n  }\n\n  public override onNewNodeRegistered(node: unknown): void {\n    this.getEventTypesOf(this._fsm.currentState).forEach(type => {\n      if(node instanceof MatSelect || node instanceof MatButtonToggle) {\n        this.registerEventToMatObject(node);\n      }\n      if(node instanceof EventTarget) {\n        this.registerEventToNode(type, node);\n        return;\n      }\n    });\n  }\n\n  public override onNodeUnregistered(node: unknown): void {\n    this.getEventTypesOf(this._fsm.currentState).forEach(type => {\n      if(node instanceof EventTarget) {\n        this.unregisterEventToNode(type, node);\n        return;\n      } else {\n        this.unregisterEventToMatObject();\n      }\n    });\n  }\n\n  public override reinit(): void {\n    this.unregisterEventToMatObject();\n    super.reinit();\n  };\n}\n","import {EventType, InputState, OutputState, TransitionBase} from 'interacto';\nimport {MatSelectChange} from '@angular/material/select';\nimport {MatEvent} from './mat-event';\n\nexport class MatSelectChangeTransition extends TransitionBase<MatEvent<MatSelectChange>> {\n  public constructor(srcState: OutputState, tgtState: InputState,\n                     action: (evt: MatEvent<MatSelectChange>) => void, guard?: (evt: MatEvent<MatSelectChange>) => boolean) {\n    super(srcState, tgtState, action, guard);\n  }\n\n  public accept(event: Event): event is MatEvent<MatSelectChange> {\n    return event instanceof MatEvent && event.change instanceof MatSelectChange;\n  }\n\n  public getAcceptedEvents(): ReadonlyArray<EventType> {\n    //FIXME: remove as\n    return [\"material\" as EventType];\n  }\n}\n","import {MatSelectChange} from '@angular/material/select';\nimport {FSMDataHandler, FSMImpl, Logger} from 'interacto';\nimport {MatInteractionBase} from './mat-interaction-base';\nimport {MatSelectChangeTransition} from './mat-select-change-transition';\nimport {MatChangeImpl, MatEvent} from './mat-event';\n\n\ninterface MatSelectFSMHandler extends FSMDataHandler {\n  selectionChanged(change: MatSelectChange): void;\n}\n\n\nclass MatSelectFSM extends FSMImpl<MatSelectFSMHandler> {\n  public constructor(logger: Logger, dataHandler: MatSelectFSMHandler) {\n    super(logger, dataHandler);\n\n    new MatSelectChangeTransition(this.initState, this.addTerminalState(\"changed\"),\n      (evt: MatEvent<MatSelectChange>): void => {\n        this.dataHandler?.selectionChanged(evt.change);\n      });\n  }\n}\n\nexport class MatSelectInteraction extends MatInteractionBase<MatSelectChange> {\n  public constructor(logger: Logger) {\n    const handler: MatSelectFSMHandler = {\n      \"selectionChanged\": (event: MatSelectChange): void => {\n        this._data._change = event;\n      },\n      \"reinitData\": (): void => {\n        this.reinitData();\n      }\n    };\n\n    super(logger, new MatSelectFSM(logger, handler), new MatChangeImpl());\n  }\n}\n","import {BindingsImpl, Interaction, InteractionBinder, UndoHistoryBase, UpdateBinder} from 'interacto';\nimport {MatSelectChange} from '@angular/material/select';\nimport {MatChange} from '../material/mat-event';\nimport {MatSelectInteraction} from '../material/mat-select-interaction';\n\n/**\n * The tyoe for partial bindings based on  the Angular Material Select widget (selection changed)\n */\nexport type PartialMatSelectBinder = InteractionBinder<Interaction<MatChange<MatSelectChange>>, MatChange<MatSelectChange>>;\n\n/**\n * The Angular and Angular Material extension of Bindings.\n */\nexport class AngularBindings<H extends UndoHistoryBase> extends BindingsImpl<H> {\n  public matSelectBinder(): PartialMatSelectBinder {\n    return new UpdateBinder(this.undoHistory, this.logger, this.observer)\n      .usingInteraction<MatSelectInteraction, MatChange<MatSelectChange>>(() => new MatSelectInteraction(this.logger));\n  }\n}\n","import {AfterContentInit, ChangeDetectorRef, Directive, ElementRef, EventEmitter, OnDestroy, ViewContainerRef} from '@angular/core';\nimport {OnDynamicDirective} from './on-dynamic.directive';\nimport {Binding, BindingImpl, InteractionBinder, InteractionCmdBinder, KeyInteractionUpdateBinder} from 'interacto';\n\n/**\n * Base class for Interacto's interactions Directives\n * @typeParam T - The type of the HTML element on which the directive operate\n * @typeParam B - The type of the partial binder the directive will produce\n */\n@Directive()\nexport abstract class InteractoBinderDirective<E,\n  B extends InteractionBinder<any, any> | KeyInteractionUpdateBinder<any, any> | InteractionCmdBinder<any, any, any>>\n  implements AfterContentInit, OnDestroy {\n\n  protected inputSet: boolean;\n\n  protected binding: Array<Binding<any, any, any>> | undefined;\n\n  protected constructor(\n    protected onDyn: OnDynamicDirective | undefined,\n    protected element: ElementRef<E> | E,\n    protected viewContainerRef: ViewContainerRef,\n    protected changeDetectorRef?: ChangeDetectorRef) {\n    this.inputSet = false;\n  }\n\n  protected abstract createPartialBinder(): B;\n\n  // tslint:disable-next-line:ban-types\n  protected checkFnName(fn: Function | undefined | string): string | undefined {\n    if (fn === undefined || typeof fn === \"string\") {\n      return undefined;\n    }\n    return fn?.name;\n  }\n\n  protected callBinder(fn: ((partialBinder: B, widget: E) => Binding<any, any, any> | Array<Binding<any, any, any>> | void) | undefined | string): void {\n    const fnName = this.checkFnName(fn);\n\n    if(fnName === undefined) {\n      return;\n    }\n\n    this.inputSet = true;\n    // Detects changes to the component and retrieves the input values\n    this.changeDetectorRef?.detectChanges();\n\n    const binding: unknown = this.getComponent(fnName)[fnName](this.completePartialBinder(), this.getElementContent());\n\n    if (binding instanceof BindingImpl) {\n      this.binding = [binding];\n    } else {\n      if (Array.isArray(binding)) {\n        this.binding = binding.filter(b => b instanceof BindingImpl).map(b => b as Binding<any, any, any>);\n      }\n    }\n  }\n\n  protected getElementContent(): E {\n    return this.element instanceof ElementRef ? this.element.nativeElement : this.element;\n  }\n\n  /**\n   * Finds the host component. Hack...\n   * @param fnName The name of the function to call for building the binding\n   */\n  protected getComponent(fnName: string): any {\n    // Finding the component. Warning: #horriblehack\n    // https://github.com/angular/angular/issues/8277\n    // Do not know why '8' (found by inspecting the object at run time)\n    return (this.viewContainerRef as any)._hostLView[8][fnName] === undefined ?\n      // When the directive is used on a template (eg ng For), have to go deeper in the object\n      (this.viewContainerRef as any)._hostLView[16][8] :\n      (this.viewContainerRef as any)._hostLView[8];\n  }\n\n  public ngAfterContentInit(): void {\n    if (!this.inputSet) {\n      this.getOutputEvent()?.emit(this.completePartialBinder());\n    }\n  }\n\n  protected abstract getOutputEvent(): EventEmitter<B> | undefined;\n\n  public ngOnDestroy(): void {\n    this.binding?.forEach(b => b.uninstallBinding());\n    this.getOutputEvent()?.complete();\n  }\n\n  protected completePartialBinder(): B {\n    const elt = this.getElementContent();\n    return (this.onDyn && elt instanceof Node ?\n      this.createPartialBinder().onDynamic(elt) :\n      this.createPartialBinder().on(this.element)) as B;\n  }\n}\n","import {AfterContentInit, Directive, ElementRef, EventEmitter, Input, OnDestroy, ViewContainerRef} from '@angular/core';\nimport {Binding, Bindings, Interaction, InteractionCmdBinder, Undo, UndoHistoryBase, WidgetData} from 'interacto';\nimport {Subscription} from 'rxjs';\nimport {InteractoBinderDirective} from './interacto-binder-directive';\n\nexport type PartialUndoButtonBinder = InteractionCmdBinder<Undo, Interaction<WidgetData<HTMLButtonElement>>, WidgetData<HTMLButtonElement>>;\n\n@Directive({\n  selector: 'button:ioUndo,button:[ioUndo]'\n})\nexport class UndoBinderDirective extends InteractoBinderDirective<HTMLButtonElement, PartialUndoButtonBinder>\n  implements AfterContentInit, OnDestroy {\n\n  private readonly undoObs: Subscription;\n\n  public constructor(\n    element: ElementRef<HTMLButtonElement>,\n    viewContainerRef: ViewContainerRef,\n    private bindings: Bindings<UndoHistoryBase>) {\n    super(undefined, element, viewContainerRef);\n    this.undoObs = bindings.undoHistory\n      .undosObservable()\n      .subscribe(_ => {\n        this.updateUndo();\n      });\n  }\n\n  @Input()\n  public set ioUndo(fn: ((partialBinder: PartialUndoButtonBinder, widget: HTMLElement) => Binding<any, any, any> | Array<Binding<any, any, any>> | void) | undefined | string) {\n    this.callBinder(fn);\n  }\n\n\n  private updateUndo(): void {\n    const elt = this.getElementContent();\n    elt.disabled = this.bindings.undoHistory.getLastUndo() === undefined;\n    elt.title = this.bindings.undoHistory.getLastOrEmptyUndoMessage();\n  }\n\n  public override ngAfterContentInit(): void {\n    this.updateUndo();\n\n    if (!this.inputSet) {\n      const b = this.createPartialBinder()\n        .catch(err => {\n          console.log(err);\n        })\n        .bind();\n\n      this.binding = [b];\n    }\n  }\n\n  protected createPartialBinder(): PartialUndoButtonBinder {\n    return this.bindings\n      .buttonBinder()\n      .on(this.element)\n      .toProduce(() => new Undo(this.bindings.undoHistory));\n  }\n\n  public override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.undoObs.unsubscribe();\n  }\n\n  protected getOutputEvent(): EventEmitter<PartialUndoButtonBinder> | undefined {\n    return undefined;\n  }\n}\n","import {AfterContentInit, Directive, ElementRef, EventEmitter, Input, OnDestroy, ViewContainerRef} from '@angular/core';\nimport {Binding, Bindings, Interaction, InteractionCmdBinder, Redo, UndoHistoryBase, WidgetData} from 'interacto';\nimport {Subscription} from 'rxjs';\nimport {InteractoBinderDirective} from './interacto-binder-directive';\n\nexport type PartialRedoButtonBinder = InteractionCmdBinder<Redo, Interaction<WidgetData<HTMLButtonElement>>, WidgetData<HTMLButtonElement>>;\n\n@Directive({\n  selector: 'button:ioRedo,button:[ioRedo]'\n})\nexport class RedoBinderDirective extends InteractoBinderDirective<HTMLButtonElement, PartialRedoButtonBinder>\n  implements AfterContentInit, OnDestroy {\n  private readonly redoObs: Subscription;\n\n  public constructor(\n    element: ElementRef<HTMLButtonElement>,\n    viewContainerRef: ViewContainerRef,\n    private bindings: Bindings<UndoHistoryBase>) {\n    super(undefined, element, viewContainerRef);\n    this.redoObs = bindings.undoHistory\n      .redosObservable()\n      .subscribe(_ => {\n        this.updateRedo();\n      });\n  }\n\n  @Input()\n  public set ioRedo(fn: ((partialBinder: PartialRedoButtonBinder, widget: HTMLElement) => Binding<any, any, any> | Array<Binding<any, any, any>> | void) | undefined | string) {\n    this.callBinder(fn);\n  }\n\n\n  private updateRedo(): void {\n    const elt = this.getElementContent();\n    elt.disabled = this.bindings.undoHistory.getLastRedo() === undefined;\n    elt.title = this.bindings.undoHistory.getLastOrEmptyRedoMessage();\n  }\n\n  public override ngAfterContentInit(): void {\n    this.updateRedo();\n\n    if (!this.inputSet) {\n      const b = this.createPartialBinder()\n        .catch(err => {\n          console.log(err);\n        })\n        .bind();\n\n      this.binding = [b];\n    }\n  }\n\n  protected createPartialBinder(): PartialRedoButtonBinder {\n    return this.bindings\n      .buttonBinder()\n      .on(this.element)\n      .toProduce(() => new Redo(this.bindings.undoHistory));\n  }\n\n  public override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.redoObs.unsubscribe();\n  }\n\n  protected getOutputEvent(): EventEmitter<PartialRedoButtonBinder> | undefined {\n    return undefined;\n  }\n}\n","import {AfterViewInit, Component, ElementRef, Input, Optional, ViewChild} from '@angular/core';\nimport {Bindings, RedoNTimes, Undoable, UndoHistory, UndoHistoryBase, UndoNTimes} from 'interacto';\n\n@Component({\n  selector: 'io-linear-history',\n  templateUrl: './linear-history.component.html',\n  styleUrls: ['./linear-history.component.css']\n})\nexport class LinearHistoryComponent implements AfterViewInit {\n  @ViewChild('undoButtonContainer')\n  public undoButtonContainer: ElementRef<HTMLElement>;\n\n  @ViewChild('redoButtonContainer')\n  public redoButtonContainer: ElementRef<HTMLElement>;\n\n  @Input()\n  @Optional()\n  public svgViewportWidth: number = 50;\n\n  @Input()\n  @Optional()\n  public svgViewportHeight: number = 50;\n\n  @Input()\n  @Optional()\n  public svgIconSize: number = 50;\n\n\n  public constructor(public undoHistory: UndoHistory, public bindings: Bindings<UndoHistoryBase>) {\n  }\n\n\n  public ngAfterViewInit(): void {\n    this.bindings.buttonBinder()\n      .onDynamic(this.undoButtonContainer)\n      .toProduce(i => new UndoNTimes(\n        this.undoHistory,\n        parseInt(i.widget?.getAttribute(\"data-index\") ?? \"-1\", 0)))\n      .bind();\n\n    this.bindings.buttonBinder()\n      .onDynamic(this.redoButtonContainer)\n      .toProduce(i => new RedoNTimes(\n        this.undoHistory,\n        parseInt(i.widget?.getAttribute(\"data-index\") ?? \"-1\", 0)))\n      .bind();\n  }\n\n\n  public undoButtonSnapshot(command: Undoable, button: HTMLButtonElement): any {\n    const snapshot = command.getVisualSnapshot();\n    if(snapshot === undefined) {\n      return command.getUndoName();\n    }\n\n    if (typeof snapshot === 'string') {\n      return `${command.getUndoName()}: ${snapshot}`;\n    }\n\n    if (snapshot instanceof SVGElement) {\n      button.querySelectorAll('div')[0]?.remove();\n\n      const size = `${this.svgIconSize}px`;\n      const div = document.createElement(\"div\");\n      div.appendChild(snapshot);\n      div.style.width = size;\n      div.style.height = size;\n      snapshot.setAttribute(\"viewBox\", `0 0 ${this.svgViewportWidth} ${this.svgViewportHeight}`);\n      snapshot.setAttribute(\"width\", size);\n      snapshot.setAttribute(\"height\", size);\n      button.querySelectorAll('div')[0]?.remove();\n      button.appendChild(div);\n      return command.getUndoName();\n    }\n\n    return command.getUndoName();\n  }\n}\n","\n<div class=\"header\">\n  <h2>HISTORY</h2>\n  <button ioUndo class=\"button-undo-redo\">UNDO</button>\n  <button ioRedo class=\"button-undo-redo\">REDO</button>\n</div>\n\n<div class=\"buttons\">\n  <div #undoButtonContainer>\n    <button #b *ngFor=\"let undoable of undoHistory.getUndo(); index as i\"\n            class=\"history-button-active\" [attr.data-index]=\"undoHistory.getUndo().length - i\">\n      {{undoButtonSnapshot(undoable, b)}}\n    </button>\n    <br/>\n  </div>\n\n  <div #redoButtonContainer>\n    <p *ngIf=\"undoHistory.getRedo().length > 0\">Redo:</p>\n    <button #b *ngFor=\"let _ of undoHistory.getRedo(); index as i\"\n            class=\"history-button-inactive\" [attr.data-index]=\"i + 1\">\n      {{undoButtonSnapshot(undoHistory.getRedo()[undoHistory.getRedo().length - i - 1], b)}}\n    </button>\n    <br/>\n  </div>\n</div>\n","import {Directive} from '@angular/core';\n\n@Directive({\n  selector: '[ioOnDynamic]'\n})\nexport class OnDynamicDirective {\n}\n","import {AfterContentInit, Directive, ElementRef, EventEmitter, Host, Input, Optional, Output, ViewContainerRef} from '@angular/core';\nimport {Binding, Bindings, PartialPointBinder, UndoHistoryBase} from 'interacto';\nimport {InteractoBinderDirective} from './interacto-binder-directive';\nimport {OnDynamicDirective} from './on-dynamic.directive';\n\n@Directive({\n  selector: '[ioClick]'\n})\nexport class ClickBinderDirective extends InteractoBinderDirective<HTMLElement, PartialPointBinder> implements AfterContentInit {\n  @Output()\n  private readonly clickBinder: EventEmitter<PartialPointBinder>;\n\n  constructor(@Optional() @Host() onDyn: OnDynamicDirective,\n              element: ElementRef<HTMLElement>,\n              viewContainerRef: ViewContainerRef,\n              private bindings: Bindings<UndoHistoryBase>) {\n    super(onDyn, element, viewContainerRef);\n    this.clickBinder = new EventEmitter<PartialPointBinder>();\n  }\n\n  /**\n   * Starts the creation of a binding using the click interaction.\n   * @param fn - The function of the component that will be called to configure the binding.\n   */\n  @Input()\n  public set ioClick(fn: ((partialBinder: PartialPointBinder, widget: HTMLElement) => Binding<any, any, any> | Array<Binding<any, any, any>> | void) | undefined | string)  {\n    this.callBinder(fn);\n  }\n\n  protected createPartialBinder(): PartialPointBinder {\n    return this.bindings.clickBinder();\n  }\n\n  protected getOutputEvent(): EventEmitter<PartialPointBinder> {\n    return this.clickBinder;\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  HostBinding,\n  Input,\n  OnDestroy\n} from '@angular/core';\nimport {Binding, PartialPointBinder, TreeUndoHistory, UndoableTreeNode} from 'interacto';\nimport {KeyValue} from \"@angular/common\";\nimport {UndoableSnapshot} from \"interacto/dist/api/undo/Undoable\";\nimport {Subscription} from \"rxjs\";\n\n/**\n * The Angular component for display a tree-based undo/redo history\n */\n@Component({\n  selector: 'io-tree-history',\n  templateUrl: './tree-history.component.html',\n  styleUrls: ['./tree-history.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TreeHistoryComponent implements OnDestroy, AfterViewInit {\n  @Input()\n  public width?: string;\n\n  @Input()\n  public svgViewportWidth: number = 50;\n\n  @Input()\n  public svgViewportHeight: number = 50;\n\n  @Input()\n  public svgIconSize: number = 50;\n\n  @Input()\n  public rootRenderer: UndoableSnapshot = undefined;\n\n  @HostBinding('style.width')\n  widthcss = \"\";\n\n  public cache: Record<number, unknown> = {};\n\n  public cacheRoot: unknown | undefined;\n\n  private subscriptionUndos: Subscription;\n\n  private subscriptionRedos: Subscription;\n\n\n  public constructor(public history: TreeUndoHistory,\n                     private changeDetect: ChangeDetectorRef) {\n    // Only updating the view on history changes\n    this.subscriptionUndos = history.undosObservable().subscribe(() => {\n      changeDetect.detectChanges();\n    });\n\n    this.subscriptionRedos = history.redosObservable().subscribe(() => {\n      changeDetect.detectChanges();\n    });\n  }\n\n  public ngAfterViewInit() {\n    // Preventing the input attributes to update the view\n    this.changeDetect.detach();\n  }\n\n  public ngOnDestroy(): void {\n    this.subscriptionUndos.unsubscribe();\n    this.subscriptionRedos.unsubscribe();\n  }\n\n  public depth(undoableNode: UndoableTreeNode | undefined): number {\n    let depth = -1;\n    let n = undoableNode;\n\n    while (n !== undefined) {\n      depth++;\n      n = n.parent;\n    }\n\n    return Math.max(0, depth);\n  }\n\n\n  private createHtmlTag(snapshot: Element, div: HTMLDivElement, svg: boolean): void {\n    div.querySelectorAll('div')[0]?.remove();\n    const size = `${this.svgIconSize}px`;\n    const divpic = document.createElement(\"div\");\n    divpic.appendChild(snapshot);\n    divpic.style.width = size;\n    divpic.style.height = size;\n\n    if (svg) {\n      snapshot.setAttribute(\"viewBox\", `0 0 ${this.svgViewportWidth} ${this.svgViewportHeight}`);\n    }\n\n    snapshot.setAttribute(\"width\", size);\n    snapshot.setAttribute(\"height\", size);\n    div.appendChild(divpic);\n  }\n\n\n  private undoButtonSnapshot_(snapshot: unknown,\n                              txt: string, div: HTMLDivElement): string | undefined {\n    if (typeof snapshot === 'string') {\n      return `${txt}: ${snapshot}`;\n    }\n\n    if (snapshot instanceof SVGElement) {\n      this.createHtmlTag(snapshot, div, true);\n      return txt;\n    }\n\n    if (snapshot instanceof HTMLElement) {\n      this.createHtmlTag(snapshot, div, false);\n      return undefined;\n    }\n\n    return txt;\n  }\n\n  public undoButtonSnapshot(node: UndoableTreeNode | undefined, div: HTMLDivElement): string | undefined {\n    if(node === undefined) {\n      if (this.cacheRoot === undefined) {\n        this.cacheRoot = this.rootRenderer;\n      }\n    }else {\n      if (this.cache[node.id] === undefined) {\n        this.cache[node.id] = node.visualSnapshot;\n      }\n    }\n\n    const snapshot = node === undefined ? this.cacheRoot : this.cache[node.id];\n    const txt = node === undefined ? \"Root\" : node.undoable.getUndoName();\n\n    if (snapshot === undefined) {\n      return txt;\n    }\n\n    if (snapshot instanceof Promise) {\n      void snapshot.then((res: unknown) => {\n        if (node !== undefined) {\n          this.cache[node.id] = res;\n        } else {\n          this.cacheRoot = res;\n        }\n        return this.undoButtonSnapshot_(res, txt, div);\n      });\n      return txt;\n    }\n\n    if(node?.id === this.history.currentNode.id) {\n      div.scrollIntoView();\n    }\n\n    return this.undoButtonSnapshot_(snapshot, txt, div);\n  }\n\n\n  public clickBinders(binder: PartialPointBinder, position: number): Array<Binding<any, any, any>> {\n    return [\n      binder\n        .toProduceAnon(() => {\n          this.history.goTo(position);\n        })\n        .when(i => i.button === 0)\n        .bind(),\n      binder\n        .toProduceAnon(() => {\n          this.history.delete(position);\n        })\n        .when(i => !this.history.keepPath && i.button === 2)\n        .ifHadEffects(() => {\n          this.changeDetect.detectChanges();\n        })\n        .bind()\n    ];\n  }\n\n\n  public getTop(position: KeyValue<number, number>): number {\n    return this.depth(this.history.undoableNodes[position.key]) * (this.svgIconSize + 10) + 10;\n  }\n\n  public getLeft(position: KeyValue<number, number>): number {\n    return position.value * (this.svgIconSize + 10) + 10;\n  }\n}\n","<div class=\"header\">\n  <h2>HISTORY</h2>\n  <button ioUndo class=\"button-undo-redo\">undo</button>\n  <button ioRedo class=\"button-undo-redo\">redo</button>\n</div>\n\n<div class=\"tree\" oncontextmenu=\"return false;\">\n  <div #d class=\"tree-node-history\" *ngFor=\"let position of history.getPositions() | keyvalue\"\n       [ngStyle]=\"{left: getLeft(position) + 'px', top: getTop(position) + 'px'}\"\n       [ngClass]=\"history.currentNode.id === position.key ? 'current-node' : ''\"\n       [ioClick] (clickBinder)=\"clickBinders($event, position.key)\">\n    {{undoButtonSnapshot(history.undoableNodes[position.key], d)}}\n  </div>\n</div>\n","import {Directive, ElementRef, EventEmitter, Host, Input, Optional, Output, ViewContainerRef} from '@angular/core';\nimport {Binding, Bindings, PartialAnchorBinder, UndoHistoryBase} from 'interacto';\nimport {InteractoBinderDirective} from './interacto-binder-directive';\nimport {OnDynamicDirective} from './on-dynamic.directive';\n\n@Directive({\n  selector: 'a:[ioAnchor],[ioAnchor] [ioOnDynamic]'\n})\nexport class AnchorBinderDirective extends InteractoBinderDirective<HTMLAnchorElement, PartialAnchorBinder> {\n  @Output()\n  private readonly aBinder: EventEmitter<PartialAnchorBinder>;\n\n  constructor(@Optional() @Host() onDyn: OnDynamicDirective,\n              element: ElementRef<HTMLAnchorElement>,\n              viewContainerRef: ViewContainerRef,\n              private bindings: Bindings<UndoHistoryBase>) {\n    super(onDyn, element, viewContainerRef);\n    this.aBinder = new EventEmitter<PartialAnchorBinder>();\n  }\n\n  @Input()\n  set ioAnchor(fn: ((partialBinder: PartialAnchorBinder, widget: HTMLAnchorElement) => Binding<any, any, any> | Array<Binding<any, any, any>> | void) | undefined | string) {\n    this.callBinder(fn);\n  }\n\n  protected createPartialBinder(): PartialAnchorBinder {\n    return this.bindings.hyperlinkBinder();\n  }\n\n  protected getOutputEvent(): EventEmitter<PartialAnchorBinder> {\n    return this.aBinder;\n  }\n}\n","import {Directive, ElementRef, EventEmitter, Host, Input, Optional, Output, ViewContainerRef} from '@angular/core';\nimport {Binding, Bindings, PartialButtonBinder, UndoHistoryBase} from 'interacto';\nimport {InteractoBinderDirective} from './interacto-binder-directive';\nimport {OnDynamicDirective} from './on-dynamic.directive';\n\n@Directive({\n  selector: 'button:[ioButton],[ioButton] [ioOnDynamic]'\n})\nexport class ButtonBinderDirective extends InteractoBinderDirective<HTMLButtonElement | HTMLElement, PartialButtonBinder> {\n  @Output()\n  private readonly buttonBinder: EventEmitter<PartialButtonBinder>;\n\n  constructor(@Optional() @Host() onDyn: OnDynamicDirective,\n              element: ElementRef<HTMLButtonElement | HTMLElement>,\n              viewContainerRef: ViewContainerRef,\n              private bindings: Bindings<UndoHistoryBase>) {\n    super(onDyn, element, viewContainerRef);\n    this.buttonBinder = new EventEmitter<PartialButtonBinder>();\n  }\n\n  @Input()\n  set ioButton(fn: ((partialBinder: PartialButtonBinder, widget: HTMLButtonElement | HTMLElement) => Binding<any, any, any> | Array<Binding<any, any, any>> | void) | undefined | string) {\n    this.callBinder(fn);\n  }\n\n  protected createPartialBinder(): PartialButtonBinder {\n    return this.bindings.buttonBinder();\n  }\n\n  protected getOutputEvent(): EventEmitter<PartialButtonBinder> {\n    return this.buttonBinder;\n  }\n}\n","import {ChangeDetectorRef, Directive, ElementRef, EventEmitter, Host, Input, Optional, Output, ViewContainerRef} from '@angular/core';\nimport {Binding, Bindings, PartialPointsBinder, UndoHistoryBase} from 'interacto';\nimport {OnDynamicDirective} from './on-dynamic.directive';\nimport {InteractoBinderDirective} from './interacto-binder-directive';\n\n@Directive({\n  selector: '[ioClicks]'\n})\nexport class ClicksBinderDirective extends InteractoBinderDirective<HTMLElement, PartialPointsBinder> {\n  @Output()\n  private readonly clicksBinder: EventEmitter<PartialPointsBinder>;\n\n  constructor(@Optional() @Host() onDyn: OnDynamicDirective,\n              element: ElementRef<HTMLElement>,\n              viewContainerRef: ViewContainerRef,\n              changeDetectorRef: ChangeDetectorRef,\n              private bindings: Bindings<UndoHistoryBase>) {\n    super(onDyn, element, viewContainerRef, changeDetectorRef);\n    this.clicksBinder = new EventEmitter<PartialPointsBinder>();\n  }\n\n  /**\n   * The expected number of clicks.\n   */\n  @Input()\n  count: number | string = 2;\n\n  /**\n   * Starts the creation of a binding using the clicks interaction.\n   * @param fn - The function of the component that will be called to configure the binding.\n   */\n  @Input()\n  set ioClicks(fn: ((partialBinder: PartialPointsBinder, widget: HTMLElement) => Binding<any, any, any> | Array<Binding<any, any, any>> | void) | undefined | string)  {\n    this.callBinder(fn);\n  }\n\n  protected createPartialBinder(): PartialPointsBinder {\n    let countValue = typeof this.count === 'number' ? this.count : parseInt(this.count, 0);\n\n    if(isNaN(countValue)) {\n      console.log('Cannot create a clicks binder since the value of number is ' +\n        'not a number (in string or number format). So using the default value: 2');\n      countValue = 2;\n    }\n\n    return this.bindings.clicksBinder(countValue);\n  }\n\n  protected getOutputEvent(): EventEmitter<PartialPointsBinder> {\n    return this.clicksBinder;\n  }\n}\n","import {Directive, ElementRef, EventEmitter, Host, Input, Optional, Output, ViewContainerRef} from '@angular/core';\nimport {Binding, Bindings, PartialUpdatePointBinder, UndoHistoryBase} from 'interacto';\nimport {OnDynamicDirective} from './on-dynamic.directive';\nimport {InteractoBinderDirective} from './interacto-binder-directive';\n\n@Directive({\n  selector: '[ioDoubleClick]'\n})\nexport class DoubleClickBinderDirective extends InteractoBinderDirective<HTMLElement, PartialUpdatePointBinder> {\n  @Output()\n  private readonly dbleclickBinder: EventEmitter<PartialUpdatePointBinder>;\n\n  constructor(@Optional() @Host() onDyn: OnDynamicDirective,\n              element: ElementRef<HTMLElement>,\n              viewContainerRef: ViewContainerRef,\n              private bindings: Bindings<UndoHistoryBase>) {\n    super(onDyn, element, viewContainerRef);\n    this.dbleclickBinder = new EventEmitter<PartialUpdatePointBinder>();\n  }\n\n  /**\n   * Starts the creation of a binding using the double-click interaction.\n   * @param fn - The function of the component that will be called to configure the binding.\n   */\n  @Input()\n  set ioDoubleClick(fn: ((partialBinder: PartialUpdatePointBinder, widget: HTMLElement) => Binding<any, any, any> | Array<Binding<any, any, any>> | void) | undefined | string)  {\n    this.callBinder(fn);\n  }\n\n  protected createPartialBinder(): PartialUpdatePointBinder {\n    return this.bindings.dbleClickBinder();\n  }\n\n  protected getOutputEvent(): EventEmitter<PartialUpdatePointBinder> {\n    return this.dbleclickBinder;\n  }\n}\n","import {ChangeDetectorRef, Directive, ElementRef, EventEmitter, Host, Input, Optional, Output, ViewContainerRef} from '@angular/core';\nimport {Binding, Bindings, PartialPointSrcTgtBinder, UndoHistoryBase} from 'interacto';\nimport {InteractoBinderDirective} from './interacto-binder-directive';\nimport {OnDynamicDirective} from './on-dynamic.directive';\n\n@Directive({\n  selector: '[ioDnd]'\n})\nexport class DndBinderDirective extends InteractoBinderDirective<HTMLElement, PartialPointSrcTgtBinder> {\n  @Output()\n  private readonly dndBinder: EventEmitter<PartialPointSrcTgtBinder>;\n\n  constructor(@Optional() @Host() onDyn: OnDynamicDirective,\n              element: ElementRef<HTMLElement>,\n              viewContainerRef: ViewContainerRef,\n              changeDetectorRef: ChangeDetectorRef,\n              private bindings: Bindings<UndoHistoryBase>) {\n    super(onDyn, element, viewContainerRef, changeDetectorRef);\n    this.dndBinder = new EventEmitter<PartialPointSrcTgtBinder>();\n  }\n\n  @Input()\n  cancellable = true;\n\n  /**\n   * Starts the creation of a binding using the key pressure interaction.\n   * @param fn - The function of the component that will be called to configure the binding.\n   */\n  @Input()\n  set ioDnd(fn: ((partialBinder: PartialPointSrcTgtBinder, widget: HTMLElement) => Binding<any, any, any> | Array<Binding<any, any, any>> | void) | undefined | string)  {\n    this.callBinder(fn);\n  }\n\n  protected createPartialBinder(): PartialPointSrcTgtBinder {\n    return this.bindings.dndBinder(this.cancellable);\n  }\n\n  protected getOutputEvent(): EventEmitter<PartialPointSrcTgtBinder> {\n    return this.dndBinder;\n  }\n}\n","import {Directive, ElementRef, EventEmitter, Host, Input, Optional, Output, ViewContainerRef} from '@angular/core';\nimport {Binding, Bindings, PartialPointSrcTgtBinder, UndoHistoryBase} from 'interacto';\nimport {InteractoBinderDirective} from './interacto-binder-directive';\nimport {OnDynamicDirective} from './on-dynamic.directive';\n\n@Directive({\n  selector: '[ioDragLock]'\n})\nexport class DragLockBinderDirective extends InteractoBinderDirective<HTMLElement, PartialPointSrcTgtBinder> {\n  @Output()\n  private readonly dragLockBinder: EventEmitter<PartialPointSrcTgtBinder>;\n\n  constructor(@Optional() @Host() onDyn: OnDynamicDirective,\n              element: ElementRef<HTMLElement>,\n              viewContainerRef: ViewContainerRef,\n              private bindings: Bindings<UndoHistoryBase>) {\n    super(onDyn, element, viewContainerRef);\n    this.dragLockBinder = new EventEmitter<PartialPointSrcTgtBinder>();\n  }\n\n  /**\n   * Starts the creation of a binding using the drag lock interaction.\n   * @param fn - The function of the component that will be called to configure the binding.\n   */\n  @Input()\n  set ioDragLock(fn: ((partialBinder: PartialPointSrcTgtBinder, widget: HTMLElement) => Binding<any, any, any> | Array<Binding<any, any, any>> | void) | undefined | string)  {\n    this.callBinder(fn);\n  }\n\n  protected createPartialBinder(): PartialPointSrcTgtBinder {\n    return this.bindings.dragLockBinder();\n  }\n\n  protected getOutputEvent(): EventEmitter<PartialPointSrcTgtBinder> {\n    return this.dragLockBinder;\n  }\n}\n","import {AfterContentInit, Directive, ElementRef, OnDestroy} from '@angular/core';\nimport {Binding, Bindings, FocusHTMLElement, Interaction, PointData, UndoHistoryBase} from 'interacto';\n\n@Directive({\n  selector: '[ioFocusOnMouseEnter]'\n})\nexport class FocusOnMouseEnterDirective implements AfterContentInit, OnDestroy {\n  private binding: Binding<FocusHTMLElement, Interaction<PointData>, PointData> | undefined;\n\n  constructor(private element: ElementRef<HTMLElement>,\n              private bindings: Bindings<UndoHistoryBase>) {\n  }\n\n  public ngAfterContentInit(): void {\n    this.binding = this.bindings\n      .mouseEnterBinder(true)\n      .on(this.element)\n      .toProduce(i => new FocusHTMLElement(i.currentTarget))\n      .bind();\n  }\n\n  public ngOnDestroy(): void {\n    if(this.binding !== undefined) {\n      this.binding.uninstallBinding();\n    }\n  }\n}\n","import {Directive, ElementRef, EventEmitter, Host, Input, Optional, Output, ViewContainerRef} from '@angular/core';\nimport {Binding, Bindings, PartialInputBinder, UndoHistoryBase} from 'interacto';\nimport {InteractoBinderDirective} from './interacto-binder-directive';\nimport {OnDynamicDirective} from './on-dynamic.directive';\n\n@Directive({\n  selector: 'input:[ioInput] :not([type=text]), [ioInput] [ioOnDynamic]'\n})\nexport class InputBinderDirective extends InteractoBinderDirective<HTMLInputElement, PartialInputBinder> {\n  @Output()\n  private readonly inputBinder: EventEmitter<PartialInputBinder>;\n\n  constructor(@Optional() @Host() onDyn: OnDynamicDirective,\n              element: ElementRef<HTMLInputElement>,\n              viewContainerRef: ViewContainerRef,\n              private bindings: Bindings<UndoHistoryBase>) {\n    super(onDyn, element, viewContainerRef);\n    this.inputBinder = new EventEmitter<PartialInputBinder>();\n  }\n\n  @Input()\n  set ioInput(fn: ((partialBinder: PartialInputBinder, widget: HTMLInputElement) => Binding<any, any, any> | Array<Binding<any, any, any>> | void) | undefined | string) {\n    this.callBinder(fn);\n  }\n\n  protected createPartialBinder(): PartialInputBinder {\n    const elt = this.getElementContent();\n\n    if (elt instanceof HTMLInputElement) {\n      switch (elt.type) {\n        case 'checkbox':\n        case 'radio':\n          return this.bindings.checkboxBinder();\n        case 'color':\n          return this.bindings.colorPickerBinder();\n        case 'date':\n          return this.bindings.dateBinder();\n        case 'number':\n          return this.bindings.spinnerBinder();\n      }\n    }\n\n    throw new Error('Cannot create a binder on the input.');\n  }\n\n  protected getOutputEvent(): EventEmitter<PartialInputBinder> {\n    return this.inputBinder;\n  }\n}\n","import {ChangeDetectorRef, Directive, ElementRef, EventEmitter, Host, Input, Optional, Output, ViewContainerRef} from '@angular/core';\nimport {Binding, Bindings, PartialKeyBinder, UndoHistoryBase} from 'interacto';\nimport {OnDynamicDirective} from './on-dynamic.directive';\nimport {InteractoBinderDirective} from './interacto-binder-directive';\n\n@Directive({\n  selector: '[ioKeydown]'\n})\nexport class KeydownBinderDirective extends InteractoBinderDirective<HTMLElement, PartialKeyBinder> {\n  @Output()\n  private readonly keydownBinder: EventEmitter<PartialKeyBinder>;\n\n  constructor(@Optional() @Host() onDyn: OnDynamicDirective,\n              element: ElementRef<HTMLElement>,\n              viewContainerRef: ViewContainerRef,\n              changeDetectorRef: ChangeDetectorRef,\n              private bindings: Bindings<UndoHistoryBase>) {\n    super(onDyn, element, viewContainerRef, changeDetectorRef);\n    this.keydownBinder = new EventEmitter<PartialKeyBinder>();\n  }\n\n  @Input()\n  modifierAccepted = true;\n\n  /**\n   * Starts the creation of a binding using the key pressure interaction.\n   * @param fn - The function of the component that will be called to configure the binding.\n   */\n  @Input()\n  set ioKeydown(fn: ((partialBinder: PartialKeyBinder, widget: HTMLElement) => Binding<any, any, any> | Array<Binding<any, any, any>> | void) | undefined | string)  {\n    this.callBinder(fn);\n  }\n\n  protected createPartialBinder(): PartialKeyBinder {\n    return this.bindings.keyDownBinder(this.modifierAccepted);\n  }\n\n  protected getOutputEvent(): EventEmitter<PartialKeyBinder> {\n    return this.keydownBinder;\n  }\n}\n","import {ChangeDetectorRef, Directive, ElementRef, EventEmitter, Host, Input, Optional, Output, ViewContainerRef} from '@angular/core';\nimport {Binding, Bindings, PartialKeyBinder, UndoHistoryBase} from 'interacto';\nimport {OnDynamicDirective} from './on-dynamic.directive';\nimport {InteractoBinderDirective} from './interacto-binder-directive';\n\n@Directive({\n  selector: '[ioKeyup]'\n})\nexport class KeyupBinderDirective extends InteractoBinderDirective<HTMLElement, PartialKeyBinder> {\n  @Output()\n  private readonly keyupBinder: EventEmitter<PartialKeyBinder>;\n\n  constructor(@Optional() @Host() onDyn: OnDynamicDirective,\n              element: ElementRef<HTMLElement>,\n              viewContainerRef: ViewContainerRef,\n              changeDetectorRef: ChangeDetectorRef,\n              private bindings: Bindings<UndoHistoryBase>) {\n    super(onDyn, element, viewContainerRef, changeDetectorRef);\n    this.keyupBinder = new EventEmitter<PartialKeyBinder>();\n  }\n\n  @Input()\n  modifierAccepted = true;\n\n  /**\n   * Starts the creation of a binding using the key pressure interaction.\n   * @param fn - The function of the component that will be called to configure the binding.\n   */\n  @Input()\n  set ioKeyup(fn: ((partialBinder: PartialKeyBinder, widget: HTMLElement) => Binding<any, any, any> | Array<Binding<any, any, any>> | void) | undefined | string)  {\n    this.callBinder(fn);\n  }\n\n  protected createPartialBinder(): PartialKeyBinder {\n    return this.bindings.keyUpBinder(this.modifierAccepted);\n  }\n\n  protected getOutputEvent(): EventEmitter<PartialKeyBinder> {\n    return this.keyupBinder;\n  }\n}\n","import {Directive, ElementRef, EventEmitter, Host, Input, Optional, Output, ViewContainerRef} from '@angular/core';\nimport {Binding, Bindings, PartialKeysBinder, UndoHistoryBase} from 'interacto';\nimport {OnDynamicDirective} from './on-dynamic.directive';\nimport {InteractoBinderDirective} from './interacto-binder-directive';\n\n@Directive({\n  selector: '[ioKeysdown]'\n})\nexport class KeysdownBinderDirective extends InteractoBinderDirective<HTMLElement, PartialKeysBinder> {\n  @Output()\n  private readonly keysdownBinder: EventEmitter<PartialKeysBinder>;\n\n  constructor(@Optional() @Host() onDyn: OnDynamicDirective,\n              element: ElementRef<HTMLElement>,\n              viewContainerRef: ViewContainerRef,\n              private bindings: Bindings<UndoHistoryBase>) {\n    super(onDyn, element, viewContainerRef);\n    this.keysdownBinder = new EventEmitter<PartialKeysBinder>();\n  }\n\n  /**\n   * Starts the creation of a binding using the keys pressed interaction.\n   * @param fn - The function of the component that will be called to configure the binding.\n   */\n  @Input()\n  set ioKeysdown(fn: ((partialBinder: PartialKeysBinder, widget: HTMLElement) => Binding<any, any, any> | Array<Binding<any, any, any>> | void) | undefined | string)  {\n    this.callBinder(fn);\n  }\n\n  protected createPartialBinder(): PartialKeysBinder {\n    return this.bindings.keysDownBinder();\n  }\n\n  protected getOutputEvent(): EventEmitter<PartialKeysBinder> {\n    return this.keysdownBinder;\n  }\n}\n","import {Directive, ElementRef, EventEmitter, Host, Input, Optional, Output, ViewContainerRef} from '@angular/core';\nimport {Binding, Bindings, PartialKeyBinder, UndoHistoryBase} from 'interacto';\nimport {InteractoBinderDirective} from './interacto-binder-directive';\nimport {OnDynamicDirective} from './on-dynamic.directive';\n\n@Directive({\n  selector: '[ioKeyType]'\n})\nexport class KeyTypeBinderDirective extends InteractoBinderDirective<HTMLElement, PartialKeyBinder> {\n  @Output()\n  private readonly keyTypeBinder: EventEmitter<PartialKeyBinder>;\n\n  constructor(@Optional() @Host() onDyn: OnDynamicDirective,\n              element: ElementRef<HTMLElement>,\n              viewContainerRef: ViewContainerRef,\n              private bindings: Bindings<UndoHistoryBase>) {\n    super(onDyn, element, viewContainerRef);\n    this.keyTypeBinder = new EventEmitter<PartialKeyBinder>();\n  }\n\n  /**\n   * Starts the creation of a binding using the key typing interaction.\n   * @param fn - The function of the component that will be called to configure the binding.\n   */\n  @Input()\n  set ioKeyType(fn: ((partialBinder: PartialKeyBinder, widget: HTMLElement) => Binding<any, any, any> | Array<Binding<any, any, any>> | void) | undefined | string)  {\n    this.callBinder(fn);\n  }\n\n  protected createPartialBinder(): PartialKeyBinder {\n    return this.bindings.keyTypeBinder();\n  }\n\n  protected getOutputEvent(): EventEmitter<PartialKeyBinder> {\n    return this.keyTypeBinder;\n  }\n}\n","import {Directive, ElementRef, EventEmitter, Host, Input, Optional, Output, ViewContainerRef} from '@angular/core';\nimport {Binding, Bindings, PartialKeysBinder, UndoHistoryBase} from 'interacto';\nimport {InteractoBinderDirective} from './interacto-binder-directive';\nimport {OnDynamicDirective} from './on-dynamic.directive';\n\n@Directive({\n  selector: '[ioKeysType]'\n})\nexport class KeysTypeBinderDirective extends InteractoBinderDirective<HTMLElement, PartialKeysBinder> {\n  @Output()\n  private readonly keysTypeBinder: EventEmitter<PartialKeysBinder>;\n\n  constructor(@Optional() @Host() onDyn: OnDynamicDirective,\n              element: ElementRef<HTMLElement>,\n              viewContainerRef: ViewContainerRef,\n              private bindings: Bindings<UndoHistoryBase>) {\n    super(onDyn, element, viewContainerRef);\n    this.keysTypeBinder = new EventEmitter<PartialKeysBinder>();\n  }\n\n  /**\n   * Starts the creation of a binding using the multiple key typing interaction.\n   * @param fn - The function of the component that will be called to configure the binding.\n   */\n  @Input()\n  set ioKeysType(fn: ((partialBinder: PartialKeysBinder, widget: HTMLElement) => Binding<any, any, any> | Array<Binding<any, any, any>> | void) | undefined | string)  {\n    this.callBinder(fn);\n  }\n\n  protected createPartialBinder(): PartialKeysBinder {\n    return this.bindings.keysTypeBinder();\n  }\n\n  protected getOutputEvent(): EventEmitter<PartialKeysBinder> {\n    return this.keysTypeBinder;\n  }\n}\n","import {ChangeDetectorRef, Directive, ElementRef, EventEmitter, Host, Input, Optional, Output, ViewContainerRef} from '@angular/core';\nimport {Binding, Bindings, PartialTouchBinder, UndoHistoryBase} from 'interacto';\nimport {OnDynamicDirective} from './on-dynamic.directive';\nimport {InteractoBinderDirective} from './interacto-binder-directive';\n\n@Directive({\n  selector: '[ioLongTouch]'\n})\nexport class LongTouchBinderDirective extends InteractoBinderDirective<HTMLElement, PartialTouchBinder> {\n  @Output()\n  private readonly longTouchBinder: EventEmitter<PartialTouchBinder>;\n\n  constructor(@Optional() @Host() onDyn: OnDynamicDirective,\n              element: ElementRef<HTMLElement>,\n              viewContainerRef: ViewContainerRef,\n              changeDetectorRef: ChangeDetectorRef,\n              private bindings: Bindings<UndoHistoryBase>) {\n    super(onDyn, element, viewContainerRef, changeDetectorRef);\n    this.longTouchBinder = new EventEmitter<PartialTouchBinder>();\n  }\n\n  /**\n   * The duration of the touch to end the user interaction.\n   * If this duration is not reached, the interaction is cancelled.\n   */\n  @Input()\n  duration = 1000;\n\n  /**\n   * Starts the creation of a binding using the long touch interaction.\n   * @param fn - The function of the component that will be called to configure the binding.\n   */\n  @Input()\n  set ioLongTouch(fn: ((partialBinder: PartialTouchBinder, widget: HTMLElement) => Binding<any, any, any> | Array<Binding<any, any, any>> | void) | undefined | string)  {\n    this.callBinder(fn);\n  }\n\n  protected createPartialBinder(): PartialTouchBinder {\n    return this.bindings.longTouchBinder(this.duration);\n  }\n\n  protected getOutputEvent(): EventEmitter<PartialTouchBinder> {\n    return this.longTouchBinder;\n  }\n}\n","import {ChangeDetectorRef, Directive, ElementRef, EventEmitter, Host, Input, Optional, Output, ViewContainerRef} from '@angular/core';\nimport {Binding, Bindings, PartialUpdatePointBinder, UndoHistoryBase} from 'interacto';\nimport {InteractoBinderDirective} from './interacto-binder-directive';\nimport {OnDynamicDirective} from './on-dynamic.directive';\n\n@Directive({\n  selector: '[ioLongMousedown]'\n})\nexport class LongMousedownBinderDirective extends InteractoBinderDirective<HTMLElement, PartialUpdatePointBinder> {\n  @Output()\n  private readonly longMousedownBinder: EventEmitter<PartialUpdatePointBinder>;\n\n  constructor(@Optional() @Host() onDyn: OnDynamicDirective,\n              element: ElementRef<HTMLElement>,\n              viewContainerRef: ViewContainerRef,\n              changeDetectorRef: ChangeDetectorRef,\n              private bindings: Bindings<UndoHistoryBase>) {\n    super(onDyn, element, viewContainerRef, changeDetectorRef);\n    this.longMousedownBinder = new EventEmitter<PartialUpdatePointBinder>();\n  }\n\n  /**\n   * The duration of the pressure to end the user interaction.\n   * If this duration is not reached, the interaction is cancelled.\n   */\n  @Input()\n  duration = 1000;\n\n  /**\n   * Starts the creation of a binding using the long press interaction.\n   * @param fn - The function of the component that will be called to configure the binding.\n   */\n  @Input()\n  set ioLongMousedown(fn: ((partialBinder: PartialUpdatePointBinder, widget: HTMLElement) => Binding<any, any, any> | Array<Binding<any, any, any>> | void) | undefined | string)  {\n    this.callBinder(fn);\n  }\n\n  protected createPartialBinder(): PartialUpdatePointBinder {\n    return this.bindings.longMouseDownBinder(this.duration);\n  }\n\n  protected getOutputEvent(): EventEmitter<PartialUpdatePointBinder> {\n    return this.longMousedownBinder;\n  }\n}\n","import {ChangeDetectorRef, Directive, ElementRef, EventEmitter, Host, Input, Optional, Output, ViewContainerRef} from '@angular/core';\nimport {Binding, Bindings, PartialMultiTouchBinder, UndoHistoryBase} from 'interacto';\nimport {InteractoBinderDirective} from './interacto-binder-directive';\nimport {OnDynamicDirective} from './on-dynamic.directive';\n\n@Directive({\n  selector: '[ioMultiTouch]'\n})\nexport class MultiTouchBinderDirective extends InteractoBinderDirective<HTMLElement, PartialMultiTouchBinder> {\n  @Output()\n  private readonly multiTouchBinder: EventEmitter<PartialMultiTouchBinder>;\n\n  constructor(@Optional() @Host() onDyn: OnDynamicDirective,\n              element: ElementRef<HTMLElement>,\n              viewContainerRef: ViewContainerRef,\n              changeDetectorRef: ChangeDetectorRef,\n              private bindings: Bindings<UndoHistoryBase>) {\n    super(onDyn, element, viewContainerRef, changeDetectorRef);\n    this.multiTouchBinder = new EventEmitter<PartialMultiTouchBinder>();\n  }\n\n  /**\n   * The number of required touches.\n   * A multi-touch starts when all its touches have started.\n   * A multi-touch ends when the number of required touches is greater than the number of touches.\n   */\n  @Input()\n  nbTouches = 2;\n\n  /**\n   * Starts the creation of a binding using the multi touch interaction.\n   * @param fn - The function of the component that will be called to configure the binding.\n   */\n  @Input()\n  set ioMultiTouch(fn: ((partialBinder: PartialMultiTouchBinder, widget: HTMLElement) => Binding<any, any, any> | Array<Binding<any, any, any>> | void) | undefined | string)  {\n    this.callBinder(fn);\n  }\n\n  protected createPartialBinder(): PartialMultiTouchBinder {\n    return this.bindings.multiTouchBinder(this.nbTouches);\n  }\n\n  protected getOutputEvent(): EventEmitter<PartialMultiTouchBinder> {\n    return this.multiTouchBinder;\n  }\n}\n","import {ChangeDetectorRef, Directive, ElementRef, EventEmitter, Host, Input, Optional, Output, ViewContainerRef} from '@angular/core';\nimport {Binding, Bindings, PartialMultiTouchBinder, UndoHistoryBase} from 'interacto';\nimport {OnDynamicDirective} from './on-dynamic.directive';\nimport {InteractoBinderDirective} from './interacto-binder-directive';\n\n@Directive({\n  selector: '[ioPan]'\n})\nexport class PanBinderDirective extends InteractoBinderDirective<HTMLElement, PartialMultiTouchBinder> {\n  @Output()\n  private readonly panBinder: EventEmitter<PartialMultiTouchBinder>;\n\n  constructor(@Optional() @Host() onDyn: OnDynamicDirective,\n              element: ElementRef<HTMLElement>,\n              viewContainerRef: ViewContainerRef,\n              changeDetectorRef: ChangeDetectorRef,\n              private bindings: Bindings<UndoHistoryBase>) {\n    super(onDyn, element, viewContainerRef, changeDetectorRef);\n    this.panBinder = new EventEmitter<PartialMultiTouchBinder>();\n  }\n\n  /**\n   * Defines whether the pan is horizontal or vertical\n   */\n  @Input()\n  horizontal = true;\n\n  /**\n   * The minimal distance from the starting point to the release point for validating the pan\n   */\n  @Input()\n  minLength = 100;\n\n  /**\n   * The tolerance rate in pixels accepted while executing the pan\n   */\n  @Input()\n  pxTolerance = 20;\n\n  /**\n   * The number of touches required to start the interaction\n   */\n  @Input()\n  nbTouches = 1;\n\n  /**\n   * Starts the creation of a binding using the pan interaction.\n   * @param fn - The function of the component that will be called to configure the binding.\n   */\n  @Input()\n  set ioPan(fn: ((partialBinder: PartialMultiTouchBinder, widget: HTMLElement) => Binding<any, any, any> | Array<Binding<any, any, any>> | void) | undefined | string)  {\n    this.callBinder(fn);\n  }\n\n  protected createPartialBinder(): PartialMultiTouchBinder {\n    return this.bindings.panBinder(this.horizontal, this.minLength, this.nbTouches, this.pxTolerance);\n  }\n\n  protected getOutputEvent(): EventEmitter<PartialMultiTouchBinder> {\n    return this.panBinder;\n  }\n}\n","import {Directive, ElementRef, EventEmitter, Host, Input, Optional, Output, ViewContainerRef} from '@angular/core';\nimport {Binding, Bindings, PartialPointBinder, UndoHistoryBase} from 'interacto';\nimport {InteractoBinderDirective} from './interacto-binder-directive';\nimport {OnDynamicDirective} from './on-dynamic.directive';\n\n@Directive({\n  selector: '[ioMousedown]'\n})\nexport class MousedownBinderDirective extends InteractoBinderDirective<HTMLElement, PartialPointBinder> {\n  @Output()\n  private readonly mousedownBinder: EventEmitter<PartialPointBinder>;\n\n  constructor(@Optional() @Host() onDyn: OnDynamicDirective,\n              element: ElementRef<HTMLElement>,\n              viewContainerRef: ViewContainerRef,\n              private bindings: Bindings<UndoHistoryBase>) {\n    super(onDyn, element, viewContainerRef);\n    this.mousedownBinder = new EventEmitter<PartialPointBinder>();\n  }\n\n  /**\n   * Starts the creation of a binding using the mouse press interaction.\n   * @param fn - The function of the component that will be called to configure the binding.\n   */\n  @Input()\n  set ioMousedown(fn: ((partialBinder: PartialPointBinder, widget: HTMLElement) => Binding<any, any, any> | Array<Binding<any, any, any>> | void) | undefined | string)  {\n    this.callBinder(fn);\n  }\n\n  protected createPartialBinder(): PartialPointBinder {\n    return this.bindings.mouseDownBinder();\n  }\n\n  protected getOutputEvent(): EventEmitter<PartialPointBinder> {\n    return this.mousedownBinder;\n  }\n}\n","import {Directive, ElementRef, EventEmitter, Host, Input, Optional, Output, ViewContainerRef} from '@angular/core';\nimport {Binding, Bindings, PartialPointBinder, UndoHistoryBase} from 'interacto';\nimport {InteractoBinderDirective} from './interacto-binder-directive';\nimport {OnDynamicDirective} from './on-dynamic.directive';\n\n@Directive({\n  selector: '[ioMousemove]'\n})\nexport class MousemoveBinderDirective extends InteractoBinderDirective<HTMLElement, PartialPointBinder> {\n  @Output()\n  private readonly mousemoveBinder: EventEmitter<PartialPointBinder>;\n\n  constructor(@Optional() @Host() onDyn: OnDynamicDirective,\n              element: ElementRef<HTMLElement>,\n              viewContainerRef: ViewContainerRef,\n              private bindings: Bindings<UndoHistoryBase>) {\n    super(onDyn, element, viewContainerRef);\n    this.mousemoveBinder = new EventEmitter<PartialPointBinder>();\n  }\n\n  /**\n   * Starts the creation of a binding using the mouse press interaction.\n   * @param fn - The function of the component that will be called to configure the binding.\n   */\n  @Input()\n  set ioMousemove(fn: ((partialBinder: PartialPointBinder, widget: HTMLElement) => Binding<any, any, any> | Array<Binding<any, any, any>> | void) | undefined | string)  {\n    this.callBinder(fn);\n  }\n\n  protected createPartialBinder(): PartialPointBinder {\n    return this.bindings.mouseMoveBinder();\n  }\n\n  protected getOutputEvent(): EventEmitter<PartialPointBinder> {\n    return this.mousemoveBinder;\n  }\n}\n","import {ChangeDetectorRef, Directive, ElementRef, EventEmitter, Host, Input, Optional, Output, ViewContainerRef} from '@angular/core';\nimport {Binding, Bindings, PartialPointBinder, UndoHistoryBase} from 'interacto';\nimport {InteractoBinderDirective} from './interacto-binder-directive';\nimport {OnDynamicDirective} from './on-dynamic.directive';\n\n@Directive({\n  selector: '[ioMouseenter]'\n})\nexport class MouseenterBinderDirective extends InteractoBinderDirective<HTMLElement, PartialPointBinder> {\n  @Output()\n  private readonly mouseenterBinder: EventEmitter<PartialPointBinder>;\n\n  constructor(@Optional() @Host() onDyn: OnDynamicDirective,\n              element: ElementRef<HTMLElement>,\n              viewContainerRef: ViewContainerRef,\n              changeDetectorRef: ChangeDetectorRef,\n              private bindings: Bindings<UndoHistoryBase>) {\n    super(onDyn, element, viewContainerRef, changeDetectorRef);\n    this.mouseenterBinder = new EventEmitter<PartialPointBinder>();\n  }\n\n  /**\n   * The expected number of clicks.\n   */\n  @Input()\n  bubbling: boolean | string = false;\n\n\n  /**\n   * Starts the creation of a binding using the mouse press interaction.\n   * @param fn - The function of the component that will be called to configure the binding.\n   */\n  @Input()\n  set ioMouseenter(fn: ((partialBinder: PartialPointBinder, widget: HTMLElement) => Binding<any, any, any> | Array<Binding<any, any, any>> | void) | undefined | string)  {\n    this.callBinder(fn);\n  }\n\n  protected createPartialBinder(): PartialPointBinder {\n    const withbubbling = typeof this.bubbling === 'boolean' ? this.bubbling : this.bubbling === 'true';\n    return this.bindings.mouseEnterBinder(withbubbling);\n  }\n\n  protected getOutputEvent(): EventEmitter<PartialPointBinder> {\n    return this.mouseenterBinder;\n  }\n}\n","import {ChangeDetectorRef, Directive, ElementRef, EventEmitter, Host, Input, Optional, Output, ViewContainerRef} from '@angular/core';\nimport {Binding, Bindings, PartialPointBinder, UndoHistoryBase} from 'interacto';\nimport {InteractoBinderDirective} from './interacto-binder-directive';\nimport {OnDynamicDirective} from './on-dynamic.directive';\n\n@Directive({\n  selector: '[ioMouseleave]'\n})\nexport class MouseleaveBinderDirective extends InteractoBinderDirective<HTMLElement, PartialPointBinder> {\n  @Output()\n  private readonly mouseleaveBinder: EventEmitter<PartialPointBinder>;\n\n  constructor(@Optional() @Host() onDyn: OnDynamicDirective,\n              element: ElementRef<HTMLElement>,\n              viewContainerRef: ViewContainerRef,\n              changeDetectorRef: ChangeDetectorRef,\n              private bindings: Bindings<UndoHistoryBase>) {\n    super(onDyn, element, viewContainerRef, changeDetectorRef);\n    this.mouseleaveBinder = new EventEmitter<PartialPointBinder>();\n  }\n\n  /**\n   * The expected number of clicks.\n   */\n  @Input()\n  bubbling: boolean | string = false;\n\n\n  /**\n   * Starts the creation of a binding using the mouse press interaction.\n   * @param fn - The function of the component that will be called to configure the binding.\n   */\n  @Input()\n  set ioMouseleave(fn: ((partialBinder: PartialPointBinder, widget: HTMLElement) => Binding<any, any, any> | Array<Binding<any, any, any>> | void) | undefined | string)  {\n    this.callBinder(fn);\n  }\n\n  protected createPartialBinder(): PartialPointBinder {\n    const withbubbling = typeof this.bubbling === 'boolean' ? this.bubbling : this.bubbling === 'true';\n    return this.bindings.mouseLeaveBinder(withbubbling);\n  }\n\n  protected getOutputEvent(): EventEmitter<PartialPointBinder> {\n    return this.mouseleaveBinder;\n  }\n}\n","import {Directive, ElementRef, EventEmitter, Host, Input, Optional, Output, ViewContainerRef} from '@angular/core';\nimport {Binding, Bindings, PartialPointBinder, UndoHistoryBase} from 'interacto';\nimport {InteractoBinderDirective} from './interacto-binder-directive';\nimport {OnDynamicDirective} from './on-dynamic.directive';\n\n@Directive({\n  selector: '[ioMouseup]'\n})\nexport class MouseupBinderDirective extends InteractoBinderDirective<HTMLElement, PartialPointBinder> {\n  @Output()\n  private readonly mouseupBinder: EventEmitter<PartialPointBinder>;\n\n  constructor(@Optional() @Host() onDyn: OnDynamicDirective,\n              element: ElementRef<HTMLElement>,\n              viewContainerRef: ViewContainerRef,\n              private bindings: Bindings<UndoHistoryBase>) {\n    super(onDyn, element, viewContainerRef);\n    this.mouseupBinder = new EventEmitter<PartialPointBinder>();\n  }\n\n  /**\n   * Starts the creation of a binding using the mouse press interaction.\n   * @param fn - The function of the component that will be called to configure the binding.\n   */\n  @Input()\n  set ioMouseup(fn: ((partialBinder: PartialPointBinder, widget: HTMLElement) => Binding<any, any, any> | Array<Binding<any, any, any>> | void) | undefined | string)  {\n    this.callBinder(fn);\n  }\n\n  protected createPartialBinder(): PartialPointBinder {\n    return this.bindings.mouseUpBinder();\n  }\n\n  protected getOutputEvent(): EventEmitter<PartialPointBinder> {\n    return this.mouseupBinder;\n  }\n}\n","import {Directive, ElementRef, EventEmitter, Host, Input, Optional, Output, ViewContainerRef} from '@angular/core';\nimport {Binding, Bindings, PartialSelectBinder, UndoHistoryBase} from 'interacto';\nimport {InteractoBinderDirective} from './interacto-binder-directive';\nimport {OnDynamicDirective} from './on-dynamic.directive';\n\n@Directive({\n  selector: 'select:[ioSelect], [ioSelect] [ioOnDynamic]'\n})\nexport class SelectBinderDirective extends InteractoBinderDirective<HTMLSelectElement, PartialSelectBinder> {\n  @Output()\n  private readonly selectBinder: EventEmitter<PartialSelectBinder>;\n\n  constructor(@Optional() @Host() onDyn: OnDynamicDirective,\n              element: ElementRef<HTMLSelectElement>,\n              viewContainerRef: ViewContainerRef,\n              private bindings: Bindings<UndoHistoryBase>) {\n    super(onDyn, element, viewContainerRef);\n    this.selectBinder = new EventEmitter<PartialSelectBinder>();\n  }\n\n  @Input()\n  set ioSelect(fn: ((partialBinder: PartialSelectBinder, widget: HTMLSelectElement) => Binding<any, any, any> | Array<Binding<any, any, any>> | void) | undefined | string) {\n    this.callBinder(fn);\n  }\n\n  protected createPartialBinder(): PartialSelectBinder {\n    return this.bindings.comboBoxBinder();\n  }\n\n  protected getOutputEvent(): EventEmitter<PartialSelectBinder> {\n    return this.selectBinder;\n  }\n}\n","import {ChangeDetectorRef, Directive, ElementRef, EventEmitter, Host, Input, Optional, Output, ViewContainerRef} from '@angular/core';\nimport {Binding, Bindings, PartialMultiTouchBinder, UndoHistoryBase} from 'interacto';\nimport {InteractoBinderDirective} from './interacto-binder-directive';\nimport {OnDynamicDirective} from './on-dynamic.directive';\n\n@Directive({\n  selector: '[ioSwipe]'\n})\nexport class SwipeBinderDirective extends InteractoBinderDirective<HTMLElement, PartialMultiTouchBinder> {\n  @Output()\n  private readonly swipeBinder: EventEmitter<PartialMultiTouchBinder>;\n\n  constructor(@Optional() @Host() onDyn: OnDynamicDirective,\n              element: ElementRef<HTMLElement>,\n              viewContainerRef: ViewContainerRef,\n              changeDetectorRef: ChangeDetectorRef,\n              private bindings: Bindings<UndoHistoryBase>) {\n    super(onDyn, element, viewContainerRef, changeDetectorRef);\n    this.swipeBinder = new EventEmitter<PartialMultiTouchBinder>();\n  }\n\n  /**\n   * Defines whether the swipe is horizontal or vertical\n   */\n  @Input()\n  horizontal = true;\n\n  /**\n   * The minimal minVelocity to reach for validating the swipe. In pixels per second.\n   */\n  @Input()\n  minVelocity = 100;\n\n  /**\n   * The minimal distance from the starting point to the release point for validating the swipe\n   */\n  @Input()\n  minLength = 100;\n\n  /**\n   * The tolerance rate in pixels accepted while executing the swipe\n   */\n  @Input()\n  pxTolerance = 20;\n\n  /**\n   * The number of touches required to start the interaction\n   */\n  @Input()\n  nbTouches = 1;\n\n  /**\n   * Starts the creation of a binding using the swipe interaction.\n   * @param fn - The function of the component that will be called to configure the binding.\n   */\n  @Input()\n  set ioSwipe(fn: ((partialBinder: PartialMultiTouchBinder, widget: HTMLElement) => Binding<any, any, any> | Array<Binding<any, any, any>> | void) | undefined | string)  {\n    this.callBinder(fn);\n  }\n\n  protected createPartialBinder(): PartialMultiTouchBinder {\n    return this.bindings.swipeBinder(this.horizontal, this.minVelocity, this.minLength, this.nbTouches, this.pxTolerance);\n  }\n\n  protected getOutputEvent(): EventEmitter<PartialMultiTouchBinder> {\n    return this.swipeBinder;\n  }\n}\n","import {ChangeDetectorRef, Directive, ElementRef, EventEmitter, Host, Input, Optional, Output, ViewContainerRef} from '@angular/core';\nimport {Binding, Bindings, PartialTapBinder, UndoHistoryBase} from 'interacto';\nimport {InteractoBinderDirective} from './interacto-binder-directive';\nimport {OnDynamicDirective} from './on-dynamic.directive';\n\n@Directive({\n  selector: '[ioTap]'\n})\nexport class TapBinderDirective extends InteractoBinderDirective<HTMLElement, PartialTapBinder> {\n  @Output()\n  private readonly tapBinder: EventEmitter<PartialTapBinder>;\n\n  constructor(@Optional() @Host() onDyn: OnDynamicDirective,\n              element: ElementRef<HTMLElement>,\n              viewContainerRef: ViewContainerRef,\n              changeDetectorRef: ChangeDetectorRef,\n              private bindings: Bindings<UndoHistoryBase>) {\n    super(onDyn, element, viewContainerRef, changeDetectorRef);\n    this.tapBinder = new EventEmitter<PartialTapBinder>();\n  }\n\n  /**\n   * The number of taps expected to end the interaction.\n   * If this number is not reached after a timeout, the interaction is cancelled.\n   */\n  @Input()\n  nbTaps = 2;\n\n  /**\n   * Starts the creation of a binding using the tap interaction.\n   * @param fn - The function of the component that will be called to configure the binding.\n   */\n  @Input()\n  set ioTap(fn: ((partialBinder: PartialTapBinder, widget: HTMLElement) => Binding<any, any, any> | Array<Binding<any, any, any>> | void) | undefined | string)  {\n    this.callBinder(fn);\n  }\n\n  protected createPartialBinder(): PartialTapBinder {\n    return this.bindings.tapBinder(this.nbTaps);\n  }\n\n  protected getOutputEvent(): EventEmitter<PartialTapBinder> {\n    return this.tapBinder;\n  }\n}\n","import {Directive, ElementRef, EventEmitter, Host, Input, Optional, Output, ViewContainerRef} from '@angular/core';\nimport {Binding, Bindings, UndoHistoryBase} from 'interacto';\nimport {InteractoBinderDirective} from './interacto-binder-directive';\nimport {OnDynamicDirective} from './on-dynamic.directive';\nimport {PartialTextInputBinder} from 'interacto/dist/api/binding/Bindings';\n\n@Directive({\n  selector: 'textarea:[ioTextarea], [ioTextarea] [ioOnDynamic]'\n})\nexport class TextAreaBinderDirective extends InteractoBinderDirective<HTMLTextAreaElement, PartialTextInputBinder> {\n  @Output()\n  private readonly textareaBinder: EventEmitter<PartialTextInputBinder>;\n\n  constructor(@Optional() @Host() onDyn: OnDynamicDirective,\n              element: ElementRef<HTMLTextAreaElement>,\n              viewContainerRef: ViewContainerRef,\n              private bindings: Bindings<UndoHistoryBase>) {\n    super(onDyn, element, viewContainerRef);\n    this.textareaBinder = new EventEmitter<PartialTextInputBinder>();\n  }\n\n  @Input()\n  set ioTextarea(fn: ((partialBinder: PartialTextInputBinder, widget: HTMLTextAreaElement) => Binding<any, any, any> | Array<Binding<any, any, any>> | void) | undefined | string) {\n    this.callBinder(fn);\n  }\n\n  protected createPartialBinder(): PartialTextInputBinder {\n    return this.bindings.textInputBinder();\n  }\n\n  protected getOutputEvent(): EventEmitter<PartialTextInputBinder> {\n    return this.textareaBinder;\n  }\n}\n","import {Directive, ElementRef, EventEmitter, Host, Input, Optional, Output, ViewContainerRef} from '@angular/core';\nimport {Binding, Bindings, UndoHistoryBase} from 'interacto';\nimport {InteractoBinderDirective} from './interacto-binder-directive';\nimport {OnDynamicDirective} from './on-dynamic.directive';\nimport {PartialTextInputBinder} from 'interacto/dist/api/binding/Bindings';\n\n@Directive({\n  selector: 'input:[ioTextinput][type=text], [ioTextinput] [ioOnDynamic]'\n})\nexport class TextInputBinderDirective extends InteractoBinderDirective<HTMLInputElement, PartialTextInputBinder> {\n  @Output()\n  private readonly textinputBinder: EventEmitter<PartialTextInputBinder>;\n\n  constructor(@Optional() @Host() onDyn: OnDynamicDirective,\n              element: ElementRef<HTMLInputElement>,\n              viewContainerRef: ViewContainerRef,\n              private bindings: Bindings<UndoHistoryBase>) {\n    super(onDyn, element, viewContainerRef);\n    this.textinputBinder = new EventEmitter<PartialTextInputBinder>();\n  }\n\n  @Input()\n  set ioTextinput(fn: ((partialBinder: PartialTextInputBinder, widget: HTMLInputElement) => Binding<any, any, any> | Array<Binding<any, any, any>> | void) | undefined | string) {\n    this.callBinder(fn);\n  }\n\n  protected createPartialBinder(): PartialTextInputBinder {\n    return this.bindings.textInputBinder();\n  }\n\n  protected getOutputEvent(): EventEmitter<PartialTextInputBinder> {\n    return this.textinputBinder;\n  }\n}\n","import {Directive, EventEmitter, Host, Input, Optional, Output, ViewContainerRef} from '@angular/core';\nimport {Binding, UndoHistoryBase} from 'interacto';\nimport {InteractoBinderDirective} from './interacto-binder-directive';\nimport {OnDynamicDirective} from './on-dynamic.directive';\nimport {AngularBindings, PartialMatSelectBinder} from '../base/angular-bindings';\nimport {MatSelect} from '@angular/material/select';\n\n@Directive({\n  selector: 'mat-select:[ioMatSelect],[ioMatSelect] [ioOnDynamic]'\n})\nexport class MatSelectBinderDirective extends InteractoBinderDirective<MatSelect, PartialMatSelectBinder> {\n  @Output()\n  private readonly matSelectBinder: EventEmitter<PartialMatSelectBinder>;\n\n  constructor(@Optional() @Host() onDyn: OnDynamicDirective,\n              // element: ElementRef<HTMLElement>,\n              viewContainerRef: ViewContainerRef,\n              private bindings: AngularBindings<UndoHistoryBase>,\n              // The MatSelect component\n              select: MatSelect) {\n    super(onDyn, select, viewContainerRef);\n    this.matSelectBinder = new EventEmitter<PartialMatSelectBinder>();\n  }\n\n  @Input()\n  set ioMatSelect(fn: ((partialBinder: PartialMatSelectBinder, widget: MatSelect) => Binding<any, any, any> | Array<Binding<any, any, any>> | void) | undefined | string) {\n    this.callBinder(fn);\n  }\n\n  protected createPartialBinder(): PartialMatSelectBinder {\n    return this.bindings.matSelectBinder();\n  }\n\n  protected getOutputEvent(): EventEmitter<PartialMatSelectBinder> {\n    return this.matSelectBinder;\n  }\n}\n","import {NgModule, Provider} from '@angular/core';\nimport {ClicksBinderDirective} from './directives/clicks-binder.directive';\nimport {Bindings, TreeUndoHistory, TreeUndoHistoryImpl, UndoHistory, UndoHistoryBase, UndoHistoryImpl} from 'interacto';\nimport {UndoBinderDirective} from './directives/undo-binder.directive';\nimport {RedoBinderDirective} from './directives/redo-binder.directive';\nimport {ClickBinderDirective} from './directives/click-binder.directive';\nimport {DoubleClickBinderDirective} from './directives/dble-click-binder.directive';\nimport {DragLockBinderDirective} from './directives/drag-lock-binder.directive';\nimport {KeyTypeBinderDirective} from './directives/key-type-binder.directive';\nimport {KeysTypeBinderDirective} from './directives/keys-type-binder.directive';\nimport {DndBinderDirective} from './directives/dnd-binder.directive';\nimport {LongTouchBinderDirective} from './directives/long-touch-binder.directive';\nimport {MultiTouchBinderDirective} from './directives/multi-touch-binder.directive';\nimport {PanBinderDirective} from './directives/pan-binder.directive';\nimport {SwipeBinderDirective} from './directives/swipe-binder.directive';\nimport {TapBinderDirective} from './directives/tap-binder.directive';\nimport {OnDynamicDirective} from './directives/on-dynamic.directive';\nimport {TextInputBinderDirective} from './directives/textinput-binder.directive';\nimport {ButtonBinderDirective} from './directives/button-binder.directive';\nimport {InputBinderDirective} from './directives/input-binder.directive';\nimport {SelectBinderDirective} from './directives/select-binder.directive';\nimport {AnchorBinderDirective} from './directives/anchor-binder.directive';\nimport {TextAreaBinderDirective} from './directives/textarea-binder.directive';\nimport {MousedownBinderDirective} from './directives/mousedown-binder.directive';\nimport {LongMousedownBinderDirective} from './directives/long-mousedown-binder.directive';\nimport {KeydownBinderDirective} from './directives/keydown-binder.directive';\nimport {KeysdownBinderDirective} from './directives/keysdown-binder.directive';\nimport {KeyupBinderDirective} from './directives/keyup-binder.directive';\nimport {MousemoveBinderDirective} from './directives/mousemove-binder.directive';\nimport {MouseenterBinderDirective} from './directives/mouseenter-binder.directive';\nimport {MouseleaveBinderDirective} from './directives/mouseleave-binder.directive';\nimport {MouseupBinderDirective} from './directives/mouseup-binder.directive';\nimport {LinearHistoryComponent} from './components/linear-history/linear-history.component';\nimport {CommonModule} from '@angular/common';\nimport {AngularBindings} from './base/angular-bindings';\nimport {MatSelectBinderDirective} from './directives/mat-select-binder.directive';\nimport {FocusOnMouseEnterDirective} from './directives/focus-on-mouse-enter.directive';\nimport {TreeHistoryComponent} from './components/tree-history/tree-history.component';\n\n\n/**\n * Provides an undo history of the provided Bindings object\n * @param ctx The bindings object that contains the history\n * @typeParam T -- The type of the undo history\n */\nexport function undoHistoryFactory<T extends UndoHistoryBase>(ctx: AngularBindings<T>): T {\n  return ctx.undoHistory;\n}\n\n/**\n * Provides a Bindings object that uses a standard linear undo history\n */\nexport function bindingsLinearUndoHistoryFactory(): AngularBindings<UndoHistory> {\n  return new AngularBindings(new UndoHistoryImpl());\n}\n\n/**\n * Provides a Bindings object that uses a standard linear undo history\n */\nexport function bindingsTreeUndoHistoryFactory(keepHistoryTraces: boolean): AngularBindings<TreeUndoHistory> {\n  return new AngularBindings(new TreeUndoHistoryImpl(keepHistoryTraces));\n\n}\n\n/**\n * Provides dependency injection for Interacto.\n * Useful for injecting a specific bindings and undo history to an Angular component.\n * This injection will use a classical linear undo history. For other kinds of undo algorithm, see\n * the other providers.\n * This undo algorithm is the default one Interacto uses.\n */\nexport function interactoProviders(): Provider[] {\n  return [\n    {provide: AngularBindings, useFactory: bindingsLinearUndoHistoryFactory},\n    {provide: Bindings, useExisting: AngularBindings},\n    {provide: UndoHistory, useFactory: undoHistoryFactory, deps: [AngularBindings]}\n  ];\n}\n\n/**\n * Provides dependency injection for Interacto.\n * Useful for injecting a specific bindings and undo history to an Angular component.\n * This injection will use a tree undo history. For other kinds of undo algorithm, see\n * the other providers.\n * @param keepHistoryTraces - States whether the history will keep in memory the ordered\n * sequence of commands the users performed. This allows to keep traces about the design process.\n * If set to true, users would not be able to delete history elements.\n */\nexport function interactoTreeUndoProviders(keepHistoryTraces: boolean = false): Provider[] {\n  return [\n    {provide: AngularBindings, useFactory: () => bindingsTreeUndoHistoryFactory(keepHistoryTraces)},\n    {provide: Bindings, useExisting: AngularBindings},\n    {provide: TreeUndoHistory, useFactory: undoHistoryFactory, deps: [AngularBindings]}\n  ];\n}\n\n\n@NgModule({\n  declarations: [\n    LinearHistoryComponent,\n    TreeHistoryComponent,\n    ClicksBinderDirective,\n    ClickBinderDirective,\n    DoubleClickBinderDirective,\n    UndoBinderDirective,\n    RedoBinderDirective,\n    DragLockBinderDirective,\n    KeydownBinderDirective,\n    KeyupBinderDirective,\n    KeysdownBinderDirective,\n    KeyTypeBinderDirective,\n    KeysTypeBinderDirective,\n    DndBinderDirective,\n    LongMousedownBinderDirective,\n    LongTouchBinderDirective,\n    MultiTouchBinderDirective,\n    PanBinderDirective,\n    MousedownBinderDirective,\n    MousemoveBinderDirective,\n    MouseenterBinderDirective,\n    MouseleaveBinderDirective,\n    MouseupBinderDirective,\n    SwipeBinderDirective,\n    TapBinderDirective,\n    TextAreaBinderDirective,\n    TextInputBinderDirective,\n    ButtonBinderDirective,\n    InputBinderDirective,\n    SelectBinderDirective,\n    AnchorBinderDirective,\n    MatSelectBinderDirective,\n    FocusOnMouseEnterDirective,\n    OnDynamicDirective\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    LinearHistoryComponent,\n    TreeHistoryComponent,\n    ClicksBinderDirective,\n    ClickBinderDirective,\n    DoubleClickBinderDirective,\n    UndoBinderDirective,\n    RedoBinderDirective,\n    DragLockBinderDirective,\n    KeydownBinderDirective,\n    KeyupBinderDirective,\n    KeysdownBinderDirective,\n    KeyTypeBinderDirective,\n    KeysTypeBinderDirective,\n    DndBinderDirective,\n    LongMousedownBinderDirective,\n    LongTouchBinderDirective,\n    MultiTouchBinderDirective,\n    PanBinderDirective,\n    MousedownBinderDirective,\n    MousemoveBinderDirective,\n    MouseenterBinderDirective,\n    MouseleaveBinderDirective,\n    MouseupBinderDirective,\n    SwipeBinderDirective,\n    TapBinderDirective,\n    TextAreaBinderDirective,\n    TextInputBinderDirective,\n    ButtonBinderDirective,\n    InputBinderDirective,\n    SelectBinderDirective,\n    AnchorBinderDirective,\n    MatSelectBinderDirective,\n    FocusOnMouseEnterDirective,\n    OnDynamicDirective\n  ],\n  providers: [interactoProviders()],\n})\nexport class InteractoModule {\n}\n","import {undoHistoryFactory} from './interacto-angular.module';\nimport {Bindings, BindingsContext, UndoHistory, UndoHistoryImpl} from 'interacto';\nimport {NgModule} from '@angular/core';\nimport {AngularBindings} from './base/angular-bindings';\n\nexport function bindingsContextFactory(): BindingsContext {\n  return new BindingsContext();\n}\n\nexport function testingBindingsFactory(ctx: BindingsContext): AngularBindings<UndoHistory> {\n  const binding = new AngularBindings(new UndoHistoryImpl());\n  binding.setBindingObserver(ctx);\n  return binding;\n}\n\n@NgModule({\n  providers: [{\n    provide: BindingsContext,\n    useFactory: bindingsContextFactory\n  }, {\n    provide: AngularBindings,\n    useFactory: testingBindingsFactory,\n    deps: [\n      BindingsContext\n    ]\n  }, {\n    provide: Bindings,\n    useExisting: AngularBindings,\n  }, {\n    provide: UndoHistory,\n    useFactory: undoHistoryFactory,\n    deps: [\n      AngularBindings\n    ]\n  }],\n})\nexport class TestingInteractoModule {\n}\n","/*\n * Public API Surface of interacto-angular\n */\n\nexport * from './lib/base/angular-bindings';\nexport * from './lib/material/mat-event';\nexport * from './lib/material/mat-interaction-base';\nexport * from './lib/material/mat-select-change-transition';\nexport * from './lib/material/mat-select-interaction';\nexport * from './lib/components/linear-history/linear-history.component';\nexport * from './lib/components/tree-history/tree-history.component';\nexport * from './lib/directives/anchor-binder.directive';\nexport * from './lib/directives/button-binder.directive';\nexport * from './lib/directives/click-binder.directive';\nexport * from './lib/directives/clicks-binder.directive';\nexport * from './lib/directives/dble-click-binder.directive';\nexport * from './lib/directives/dnd-binder.directive';\nexport * from './lib/directives/drag-lock-binder.directive';\nexport * from './lib/directives/focus-on-mouse-enter.directive';\nexport * from './lib/directives/input-binder.directive';\nexport * from './lib/directives/keydown-binder.directive';\nexport * from './lib/directives/keyup-binder.directive';\nexport * from './lib/directives/keysdown-binder.directive';\nexport * from './lib/directives/key-type-binder.directive';\nexport * from './lib/directives/keys-type-binder.directive';\nexport * from './lib/directives/long-touch-binder.directive';\nexport * from './lib/directives/long-mousedown-binder.directive';\nexport * from './lib/directives/multi-touch-binder.directive';\nexport * from './lib/directives/on-dynamic.directive';\nexport * from './lib/directives/pan-binder.directive';\nexport * from './lib/directives/mousedown-binder.directive';\nexport * from './lib/directives/mousemove-binder.directive';\nexport * from './lib/directives/mouseenter-binder.directive';\nexport * from './lib/directives/mouseleave-binder.directive';\nexport * from './lib/directives/mouseup-binder.directive';\nexport * from './lib/directives/redo-binder.directive';\nexport * from './lib/directives/select-binder.directive';\nexport * from './lib/directives/swipe-binder.directive';\nexport * from './lib/directives/tap-binder.directive';\nexport * from './lib/directives/textarea-binder.directive';\nexport * from './lib/directives/textinput-binder.directive';\nexport * from './lib/directives/mat-select-binder.directive';\nexport * from './lib/directives/undo-binder.directive';\nexport * from './lib/interacto-angular.module';\nexport * from './lib/testing-interacto-angular.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i2","i3.UndoBinderDirective","i4.RedoBinderDirective","i1.OnDynamicDirective","i3.ClickBinderDirective","i4.UndoBinderDirective","i5.RedoBinderDirective","i2.AngularBindings"],"mappings":"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"}